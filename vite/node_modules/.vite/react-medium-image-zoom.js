import {
  require_prop_types,
  require_react_dom
} from "./chunk-U3QVTRGV.js";
import "./chunk-WOW7DOC5.js";
import "./chunk-EC2USFAY.js";
import {
  require_react
} from "./chunk-RYO6GA3P.js";
import {
  __commonJS
} from "./chunk-A5ICIBVI.js";

// ../node_modules/react-medium-image-zoom/lib/defaults.js
var require_defaults = __commonJS({
  "../node_modules/react-medium-image-zoom/lib/defaults.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var transitionDuration = 300;
    var defaults = {
      errors: {
        controlled: "A component is changing a react-medium-image-zoom component from a controlled component to an uncontrolled one. ImageZoom elements should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled image zoom element for the lifetime of the component.",
        uncontrolled: "A component is changing a react-medium-image-zoom component from an uncontrolled component to a controlled one. ImageZoom elements should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled image zoom element for the lifetime of the component."
      },
      styles: {
        image: {
          cursor: "zoom-in"
        },
        zoomImage: {
          cursor: "zoom-out",
          position: "absolute",
          transition: "transform " + transitionDuration + "ms",
          transform: "translate3d(0, 0, 0) scale(1)",
          transformOrigin: "center center",
          willChange: "transform, top, left"
        },
        zoomContainer: {
          position: "fixed",
          top: 0,
          right: 0,
          bottom: 0,
          left: 0,
          zIndex: 999
        },
        overlay: {
          position: "absolute",
          top: 0,
          right: 0,
          bottom: 0,
          left: 0,
          backgroundColor: "#fff",
          opacity: 0,
          transition: "opacity " + transitionDuration + "ms"
        }
      },
      transitionDuration
    };
    exports.default = defaults;
  }
});

// ../node_modules/react-medium-image-zoom/lib/helpers.js
var require_helpers = __commonJS({
  "../node_modules/react-medium-image-zoom/lib/helpers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var createPortalContainer = exports.createPortalContainer = function createPortalContainer2(tag) {
      var portal = document.createElement(tag);
      document.body.appendChild(portal);
      return portal;
    };
    var removePortalContainer = exports.removePortalContainer = function removePortalContainer2(portal) {
      document.body.removeChild(portal);
    };
    var fetchImage = exports.fetchImage = function fetchImage2(image, cb) {
      var src = image.src, srcSet = image.srcSet, sizes = image.sizes;
      var img = new Image();
      var onLoad = function onLoad2() {
        cb(img);
        img.removeEventListener("load", onLoad2);
      };
      img.addEventListener("load", onLoad);
      img.src = src;
      if (srcSet)
        img.srcset = srcSet;
      if (sizes)
        img.sizes = sizes;
    };
    var getScale = exports.getScale = function getScale2(_ref) {
      var width = _ref.width, height = _ref.height, zoomMargin = _ref.zoomMargin;
      var scaleX = window.innerWidth / (width + zoomMargin);
      var scaleY = window.innerHeight / (height + zoomMargin);
      return Math.min(scaleX, scaleY);
    };
    var getMaxDimensionScale = exports.getMaxDimensionScale = function getMaxDimensionScale2(_ref2) {
      var width = _ref2.width, height = _ref2.height, naturalWidth = _ref2.naturalWidth, naturalHeight = _ref2.naturalHeight, zoomMargin = _ref2.zoomMargin;
      var scale = getScale({
        width: naturalWidth,
        height: naturalHeight,
        zoomMargin
      });
      var ratio = naturalWidth > naturalHeight ? naturalWidth / width : naturalHeight / height;
      return scale > 1 ? ratio : scale * ratio;
    };
    var isMaxDimension = exports.isMaxDimension = function isMaxDimension2(img) {
      return img.clientWidth >= img.naturalWidth || img.clientHeight >= img.naturalHeight;
    };
  }
});

// ../node_modules/react-medium-image-zoom/lib/keyboardEvents.js
var require_keyboardEvents = __commonJS({
  "../node_modules/react-medium-image-zoom/lib/keyboardEvents.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var enterKey = {
      keys: ["Enter"],
      keyCode: 13
    };
    var tabKey = {
      keys: ["Tab"],
      keyCode: 9
    };
    var spaceBarKey = {
      keys: [" "],
      keyCode: 32
    };
    var escapeKey = {
      keys: ["Escape", "Esc"],
      keyCode: 27
    };
    var isKey = function isKey2(_ref) {
      var keyCode = _ref.keyCode, keys = _ref.keys;
      return function(e) {
        return e.keyCode ? e.keyCode === keyCode : keys.indexOf(e.key) !== -1;
      };
    };
    var isEnterOrSpaceBarKey = exports.isEnterOrSpaceBarKey = function isEnterOrSpaceBarKey2(e) {
      return isKey(enterKey)(e) || isSpaceBarKey(e);
    };
    var isTabKey = exports.isTabKey = isKey(tabKey);
    var isSpaceBarKey = exports.isSpaceBarKey = isKey(spaceBarKey);
    var isEscapeKey = exports.isEscapeKey = isKey(escapeKey);
  }
});

// ../node_modules/react-medium-image-zoom/lib/EventsWrapper.js
var require_EventsWrapper = __commonJS({
  "../node_modules/react-medium-image-zoom/lib/EventsWrapper.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactDom = require_react_dom();
    var _propTypes = require_prop_types();
    var _defaults = require_defaults();
    var _defaults2 = _interopRequireDefault(_defaults);
    var _helpers = require_helpers();
    var _keyboardEvents = require_keyboardEvents();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var EventsWrapper = function(_Component) {
      _inherits(EventsWrapper2, _Component);
      function EventsWrapper2() {
        _classCallCheck(this, EventsWrapper2);
        var _this = _possibleConstructorReturn(this, (EventsWrapper2.__proto__ || Object.getPrototypeOf(EventsWrapper2)).call(this));
        _this.portal = (0, _helpers.createPortalContainer)("div");
        _this.unzoom = _this.unzoom.bind(_this);
        _this._handleScroll = _this._handleScroll.bind(_this);
        _this._handleKeyDown = _this._handleKeyDown.bind(_this);
        _this._handleResize = _this._handleResize.bind(_this);
        _this._handleTouchStart = _this._handleTouchStart.bind(_this);
        _this._handleTouchMove = _this._handleTouchMove.bind(_this);
        _this._handleTouchEnd = _this._handleTouchEnd.bind(_this);
        return _this;
      }
      _createClass(EventsWrapper2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this2 = this;
          this.pageYOffset = window.pageYOffset;
          this.loadTimeout = setTimeout(function() {
            window.addEventListener("scroll", _this2._handleScroll);
            window.addEventListener("keydown", _this2._handleKeyDown);
            window.addEventListener("ontouchstart", _this2._handleTouchStart);
            window.addEventListener("ontouchmove", _this2._handleTouchMove);
            window.addEventListener("ontouchend", _this2._handleTouchEnd);
            window.addEventListener("ontouchcancel", _this2._handleTouchEnd);
            window.addEventListener("resize", _this2._handleResize);
          }, _defaults2.default.transitionDuration);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          clearTimeout(this.loadTimeout);
          window.removeEventListener("scroll", this._handleScroll);
          window.removeEventListener("keydown", this._handleKeyDown);
          window.removeEventListener("ontouchstart", this._handleTouchStart);
          window.removeEventListener("ontouchmove", this._handleTouchMove);
          window.removeEventListener("ontouchend", this._handleTouchEnd);
          window.removeEventListener("ontouchcancel", this._handleTouchEnd);
          window.removeEventListener("resize", this._handleResize);
          (0, _helpers.removePortalContainer)(this.portal);
        }
      }, {
        key: "render",
        value: function render() {
          return this.portal ? (0, _reactDom.createPortal)(_react2.default.createElement("div", { onClick: this.unzoom }, this._cloneChild()), this.portal) : null;
        }
      }, {
        key: "unzoom",
        value: function unzoom() {
          var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, force = _ref.force, allowRefocus = _ref.allowRefocus;
          if (this.props.controlledEventFn && !force) {
            return this.props.controlledEventFn();
          }
          return this.child.unzoom(allowRefocus);
        }
      }, {
        key: "_cloneChild",
        value: function _cloneChild() {
          var _this3 = this;
          return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), {
            ref: function ref(child) {
              _this3.child = child;
            }
          });
        }
      }, {
        key: "_handleKeyDown",
        value: function _handleKeyDown(e) {
          if ((0, _keyboardEvents.isTabKey)(e)) {
            e.preventDefault();
            return;
          }
          var allowAccessibilityClose = this.props.allowAccessibilityClose;
          var unzoomForEnterOrSpace = allowAccessibilityClose && (0, _keyboardEvents.isEnterOrSpaceBarKey)(e);
          var unzoomForEscape = (0, _keyboardEvents.isEscapeKey)(e);
          if (unzoomForEnterOrSpace) {
            e.preventDefault();
          }
          if (unzoomForEnterOrSpace || unzoomForEscape) {
            this.unzoom({ allowRefocus: true });
          }
        }
      }, {
        key: "_handleResize",
        value: function _handleResize() {
          this.forceUpdate();
        }
      }, {
        key: "_handleScroll",
        value: function _handleScroll() {
          this.forceUpdate();
          var scrollChange = Math.abs(window.pageYOffset - this.pageYOffset);
          if (scrollChange > 10) {
            this.unzoom();
          }
        }
      }, {
        key: "_handleTouchStart",
        value: function _handleTouchStart(e) {
          this.yTouchPosition = e.touches[0].clientY;
        }
      }, {
        key: "_handleTouchMove",
        value: function _handleTouchMove(e) {
          this.forceUpdate();
          var touchChange = Math.abs(e.touches[0].clientY - this.yTouchPosition);
          if (touchChange > 10) {
            this.unzoom();
          }
        }
      }, {
        key: "_handleTouchEnd",
        value: function _handleTouchEnd() {
          delete this.yTouchPosition;
        }
      }]);
      return EventsWrapper2;
    }(_react.Component);
    exports.default = EventsWrapper;
    EventsWrapper.propTypes = {
      children: _propTypes.element.isRequired,
      getControlledEventFn: _propTypes.func
    };
  }
});

// ../node_modules/react-medium-image-zoom/lib/Overlay.js
var require_Overlay = __commonJS({
  "../node_modules/react-medium-image-zoom/lib/Overlay.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _defaults = require_defaults();
    var _defaults2 = _interopRequireDefault(_defaults);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Overlay = function(_PureComponent) {
      _inherits(Overlay2, _PureComponent);
      function Overlay2(props) {
        _classCallCheck(this, Overlay2);
        var _this = _possibleConstructorReturn(this, (Overlay2.__proto__ || Object.getPrototypeOf(Overlay2)).call(this, props));
        _this.state = {
          isMounted: false
        };
        return _this;
      }
      _createClass(Overlay2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.setState({ isMounted: true });
        }
      }, {
        key: "render",
        value: function render() {
          return _react2.default.createElement("div", { style: this._getStyle() });
        }
      }, {
        key: "_getStyle",
        value: function _getStyle() {
          var isVisible = this.state.isMounted && this.props.isVisible;
          var opacity = isVisible & 1;
          return _extends({}, _defaults2.default.styles.overlay, { opacity }, this.props.defaultStyles.overlay);
        }
      }]);
      return Overlay2;
    }(_react.PureComponent);
    exports.default = Overlay;
    Overlay.propTypes = {
      isVisible: _propTypes.bool.isRequired,
      defaultStyles: _propTypes.object.isRequired
    };
  }
});

// ../node_modules/react-medium-image-zoom/lib/Zoom.js
var require_Zoom = __commonJS({
  "../node_modules/react-medium-image-zoom/lib/Zoom.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _defaults = require_defaults();
    var _defaults2 = _interopRequireDefault(_defaults);
    var _helpers = require_helpers();
    var _Overlay = require_Overlay();
    var _Overlay2 = _interopRequireDefault(_Overlay);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Zoom = function(_Component) {
      _inherits(Zoom2, _Component);
      function Zoom2(props) {
        _classCallCheck(this, Zoom2);
        var _this = _possibleConstructorReturn(this, (Zoom2.__proto__ || Object.getPrototypeOf(Zoom2)).call(this, props));
        _this.state = {
          hasLoaded: false,
          isZoomed: true,
          src: props.image.currentSrc || props.image.src,
          tmpSrc: null
        };
        _this.unzoom = _this.unzoom.bind(_this);
        _this._handleImageLoad = _this._handleImageLoad.bind(_this);
        return _this;
      }
      _createClass(Zoom2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _props$zoomImage = this.props.zoomImage, src = _props$zoomImage.src, srcSet = _props$zoomImage.srcSet;
          this.setState({ hasLoaded: true });
          if (src || srcSet) {
            (0, _helpers.fetchImage)(this.props.zoomImage, this._handleImageLoad);
          }
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
          var _this2 = this;
          if (!prevState.tmpSrc && this.state.tmpSrc) {
            setTimeout(function() {
              _this2.setState({ src: _this2.state.tmpSrc, tmpSrc: null });
            }, 100);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, defaultStyles = _props.defaultStyles, zoomImage = _props.zoomImage, _state = this.state, tmpSrc = _state.tmpSrc, isZoomed = _state.isZoomed, src = _state.src;
          var style = this._getZoomImageStyle();
          return _react2.default.createElement("div", { style: this._getZoomContainerStyle() }, _react2.default.createElement(_Overlay2.default, { isVisible: isZoomed, defaultStyles }), _react2.default.createElement("img", _extends({}, zoomImage, { src, style })), _react2.default.createElement(TmpImg, _extends({}, zoomImage, { src: tmpSrc, style })));
        }
      }, {
        key: "unzoom",
        value: function unzoom(allowRefocus) {
          var onUnzoom = this.props.onUnzoom(this.state.src, allowRefocus);
          this.setState({ isZoomed: false }, function() {
            return setTimeout(onUnzoom, _defaults2.default.transitionDuration);
          });
        }
      }, {
        key: "_handleImageLoad",
        value: function _handleImageLoad(img) {
          if (this.state.isZoomed) {
            this.setState({ tmpSrc: img.currentSrc || img.src });
          }
        }
      }, {
        key: "_getZoomContainerStyle",
        value: function _getZoomContainerStyle() {
          return _extends({}, _defaults2.default.styles.zoomContainer, this.props.defaultStyles.zoomContainer);
        }
      }, {
        key: "_getZoomImageStyle",
        value: function _getZoomImageStyle() {
          var _props2 = this.props, image = _props2.image, shouldRespectMaxDimension = _props2.shouldRespectMaxDimension, src = _props2.src, zoomMargin = _props2.zoomMargin;
          var imageOffset = image.getBoundingClientRect();
          var top = imageOffset.top, left = imageOffset.left;
          var width = image.width, height = image.height, naturalWidth = image.naturalWidth, naturalHeight = image.naturalHeight;
          var style = { top, left, width, height };
          if (!this.state.hasLoaded || !this.state.isZoomed) {
            return _extends({}, _defaults2.default.styles.zoomImage, this.props.defaultStyles.zoomImage, this.props.style, style);
          }
          var viewportX = document.body.clientWidth / 2;
          var viewportY = window.innerHeight / 2;
          var imageCenterX = imageOffset.left + width / 2;
          var imageCenterY = imageOffset.top + height / 2;
          var translateX = viewportX - imageCenterX;
          var translateY = viewportY - imageCenterY;
          var scale = shouldRespectMaxDimension && !src ? (0, _helpers.getMaxDimensionScale)({
            width,
            height,
            naturalWidth,
            naturalHeight,
            zoomMargin
          }) : (0, _helpers.getScale)({ width, height, zoomMargin });
          var zoomStyle = {
            transform: "translate3d(" + translateX + "px, " + translateY + "px, 0) scale(" + scale + ")"
          };
          return _extends({}, _defaults2.default.styles.zoomImage, this.props.defaultStyles.zoomImage, this.props.style, style, zoomStyle);
        }
      }], [{
        key: "defaultProps",
        get: function get() {
          return {
            zoomImage: {}
          };
        }
      }]);
      return Zoom2;
    }(_react.Component);
    exports.default = Zoom;
    Zoom.propTypes = {
      defaultStyles: _propTypes.object.isRequired,
      image: _propTypes.object.isRequired,
      shouldRespectMaxDimension: _propTypes.bool,
      zoomImage: (0, _propTypes.shape)({
        src: _propTypes.string,
        alt: _propTypes.string,
        className: _propTypes.string,
        style: _propTypes.object
      }).isRequired,
      zoomMargin: _propTypes.number.isRequired,
      onUnzoom: _propTypes.func.isRequired
    };
    var TmpImg = function TmpImg2(_ref) {
      var src = _ref.src, style = _ref.style, props = _objectWithoutProperties(_ref, ["src", "style"]);
      return src ? _react2.default.createElement("img", _extends({}, props, { src, style: getTmpStyle(style) })) : null;
    };
    var tmpStyle = {
      position: "fixed",
      visibility: "hidden"
    };
    var getTmpStyle = function getTmpStyle2(style) {
      return _extends({}, style, tmpStyle);
    };
  }
});

// ../node_modules/react-medium-image-zoom/lib/ImageZoom.js
var require_ImageZoom = __commonJS({
  "../node_modules/react-medium-image-zoom/lib/ImageZoom.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _defaults = require_defaults();
    var _defaults2 = _interopRequireDefault(_defaults);
    var _helpers = require_helpers();
    var _keyboardEvents = require_keyboardEvents();
    var _EventsWrapper = require_EventsWrapper();
    var _EventsWrapper2 = _interopRequireDefault(_EventsWrapper);
    var _Zoom = require_Zoom();
    var _Zoom2 = _interopRequireDefault(_Zoom);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var isControlled = function isControlled2(isZoomed) {
      return isZoomed !== null && isZoomed !== void 0;
    };
    var focusableTabIndex = 0;
    var unfocusableTabIndex = -1;
    var ImageZoom = function(_Component) {
      _inherits(ImageZoom2, _Component);
      function ImageZoom2(props) {
        _classCallCheck(this, ImageZoom2);
        var _this = _possibleConstructorReturn(this, (ImageZoom2.__proto__ || Object.getPrototypeOf(ImageZoom2)).call(this, props));
        _this.state = {
          isDisabled: false,
          isZoomed: false,
          wasZoomed: false,
          src: props.image.src,
          prevSrc: props.image.src,
          isClosing: false
        };
        _this._handleKeyDown = _this._handleKeyDown.bind(_this);
        _this._handleLoad = _this._handleLoad.bind(_this);
        _this._handleLoadError = _this._handleLoadError.bind(_this);
        _this._handleUnzoom = _this._handleUnzoom.bind(_this);
        _this._handleZoom = _this._handleZoom.bind(_this);
        return _this;
      }
      _createClass(ImageZoom2, [{
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
          if (!isControlled(prevProps.isZoomed) && isControlled(this.props.isZoomed)) {
            throw new Error(_defaults2.default.errors.uncontrolled);
          } else if (isControlled(prevProps.isZoomed) && !isControlled(this.props.isZoomed)) {
            throw new Error(_defaults2.default.errors.controlled);
          }
          var prevIsZoomed = isControlled(prevProps.isZoomed) ? prevProps.isZoomed : prevState.isZoomed;
          var isZoomed = isControlled(this.props.isZoomed) ? this.props.isZoomed : this.state.isZoomed;
          if (prevIsZoomed !== isZoomed && !isZoomed && this.portalInstance) {
            this.portalInstance.unzoom({ force: true });
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _props = this.props, defaultStyles = _props.defaultStyles, image = _props.image, propsIsZoomed = _props.isZoomed, shouldRespectMaxDimension = _props.shouldRespectMaxDimension, zoomImage = _props.zoomImage, zoomMargin = _props.zoomMargin, _state = this.state, isDisabled = _state.isDisabled, stateIsZoomed = _state.isZoomed, src = _state.src, isClosing = _state.isClosing;
          var attrs = _extends({}, !isDisabled && { tabIndex: focusableTabIndex }, image, { src, style: this._getImageStyle() }, !isDisabled && {
            onMouseDown: this._preventFocus,
            onClick: this._handleZoom,
            onKeyDown: this._handleKeyDown
          });
          var isZoomed = isControlled(propsIsZoomed) ? propsIsZoomed : stateIsZoomed;
          return _react2.default.createElement(_react.Fragment, null, _react2.default.createElement("img", _extends({}, attrs, {
            key: "image",
            ref: function ref(x) {
              _this2.image = x;
            },
            onLoad: this._handleLoad,
            onError: this._handleLoadError
          })), this.image && (isZoomed || isClosing) ? _react2.default.createElement(_EventsWrapper2.default, {
            key: "portal",
            ref: function ref(node) {
              _this2.portalInstance = node;
            },
            controlledEventFn: this._getControlledEventFn(),
            allowAccessibilityClose: this._allowTabNavigation()
          }, _react2.default.createElement(_Zoom2.default, {
            defaultStyles,
            image: this.image,
            shouldRespectMaxDimension,
            zoomImage,
            zoomMargin: Number(zoomMargin),
            onUnzoom: this._handleUnzoom
          })) : null);
        }
      }, {
        key: "_checkShouldDisableComponent",
        value: function _checkShouldDisableComponent() {
          var _props2 = this.props, shouldRespectMaxDimension = _props2.shouldRespectMaxDimension, zoomImage = _props2.zoomImage;
          var isDisabled = shouldRespectMaxDimension && !zoomImage && (0, _helpers.isMaxDimension)(this.image);
          this.setState({ isDisabled });
        }
      }, {
        key: "_getImageStyle",
        value: function _getImageStyle() {
          var _props3 = this.props, defaultStyles = _props3.defaultStyles, image = _props3.image, isZoomedP = _props3.isZoomed, _state2 = this.state, isDisabled = _state2.isDisabled, isZoomedSt = _state2.isZoomed, isClosing = _state2.isClosing;
          var isHidden = isZoomedSt || isZoomedP || isClosing;
          return _extends({}, _defaults2.default.styles.image, isHidden && { visibility: "hidden" }, defaultStyles.image, image.style, isDisabled && { cursor: "inherit" });
        }
      }, {
        key: "_handleLoad",
        value: function _handleLoad(e) {
          this._checkShouldDisableComponent();
          var cb = this.props.image.onLoad || Function.prototype;
          cb(e);
        }
      }, {
        key: "_handleLoadError",
        value: function _handleLoadError(e) {
          this.setState({ isDisabled: true });
          var cb = this.props.image.onError || Function.prototype;
          cb(e);
        }
      }, {
        key: "_handleKeyDown",
        value: function _handleKeyDown(e) {
          if ((0, _keyboardEvents.isEnterOrSpaceBarKey)(e)) {
            e.preventDefault();
            this._handleZoom(e);
          }
        }
      }, {
        key: "_preventFocus",
        value: function _preventFocus(e) {
          e.preventDefault();
        }
      }, {
        key: "_handleZoom",
        value: function _handleZoom(e) {
          if (!isControlled(this.props.isZoomed) && this.props.shouldHandleZoom(e)) {
            this.setState({ isZoomed: true }, this.props.onZoom);
          } else {
            this.props.onZoom();
          }
        }
      }, {
        key: "_handleUnzoom",
        value: function _handleUnzoom(src, allowRefocus) {
          var _this3 = this;
          return function() {
            var changes = _extends({ isZoomed: false, isClosing: false }, _this3.props.shouldReplaceImage && { src });
            _this3.setState(changes, _this3.props.onUnzoom);
            if (allowRefocus && _this3._allowTabNavigation()) {
              _this3.image.focus();
            }
          };
        }
      }, {
        key: "_getControlledEventFn",
        value: function _getControlledEventFn() {
          return isControlled(this.props.isZoomed) ? this.props.onUnzoom : null;
        }
      }, {
        key: "_allowTabNavigation",
        value: function _allowTabNavigation() {
          return this.image && this.image.tabIndex !== unfocusableTabIndex;
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(props, state) {
          var isClosing = state.wasZoomed && !props.isZoomed || state.isClosing;
          var src = props.image.src !== state.prevSrc ? props.image.src : state.src;
          return {
            src,
            isClosing,
            wasZoomed: props.isZoomed,
            prevSrc: props.image.src
          };
        }
      }, {
        key: "defaultProps",
        get: function get() {
          return {
            shouldReplaceImage: true,
            shouldRespectMaxDimension: false,
            zoomMargin: 40,
            defaultStyles: {
              zoomContainer: {},
              overlay: {},
              image: {},
              zoomImage: {}
            },
            shouldHandleZoom: function shouldHandleZoom() {
              return true;
            },
            onZoom: function onZoom() {
            },
            onUnzoom: function onUnzoom() {
            }
          };
        }
      }]);
      return ImageZoom2;
    }(_react.Component);
    exports.default = ImageZoom;
    ImageZoom.propTypes = {
      image: (0, _propTypes.shape)({
        src: _propTypes.string.isRequired,
        alt: _propTypes.string,
        className: _propTypes.string,
        style: _propTypes.object
      }).isRequired,
      zoomImage: (0, _propTypes.shape)({
        src: _propTypes.string,
        alt: _propTypes.string,
        className: _propTypes.string,
        style: _propTypes.object
      }),
      defaultStyles: _propTypes.object,
      isZoomed: _propTypes.bool,
      shouldHandleZoom: _propTypes.func,
      shouldReplaceImage: _propTypes.bool,
      shouldRespectMaxDimension: _propTypes.bool,
      onZoom: _propTypes.func,
      onUnzoom: _propTypes.func
    };
  }
});

// ../node_modules/react-medium-image-zoom/lib/index.js
var require_lib = __commonJS({
  "../node_modules/react-medium-image-zoom/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _ImageZoom = require_ImageZoom();
    var _ImageZoom2 = _interopRequireDefault(_ImageZoom);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = _ImageZoom2.default;
  }
});

// dep:react-medium-image-zoom
var react_medium_image_zoom_default = require_lib();
export {
  react_medium_image_zoom_default as default
};
//# sourceMappingURL=react-medium-image-zoom.js.map
