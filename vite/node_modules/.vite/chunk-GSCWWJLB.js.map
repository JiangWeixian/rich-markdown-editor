{
  "version": 3,
  "sources": ["../../../node_modules/w3c-keyname/index.es.js", "../../../node_modules/prosemirror-keymap/src/keymap.js"],
  "sourcesContent": ["export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n", "import {base, keyName} from \"w3c-keyname\"\nimport {Plugin} from \"prosemirror-state\"\n\n// declare global: navigator\n\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false\n\nfunction normalizeKeyName(name) {\n  let parts = name.split(/-(?!$)/), result = parts[parts.length - 1]\n  if (result == \"Space\") result = \" \"\n  let alt, ctrl, shift, meta\n  for (let i = 0; i < parts.length - 1; i++) {\n    let mod = parts[i]\n    if (/^(cmd|meta|m)$/i.test(mod)) meta = true\n    else if (/^a(lt)?$/i.test(mod)) alt = true\n    else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true\n    else if (/^s(hift)?$/i.test(mod)) shift = true\n    else if (/^mod$/i.test(mod)) { if (mac) meta = true; else ctrl = true }\n    else throw new Error(\"Unrecognized modifier name: \" + mod)\n  }\n  if (alt) result = \"Alt-\" + result\n  if (ctrl) result = \"Ctrl-\" + result\n  if (meta) result = \"Meta-\" + result\n  if (shift) result = \"Shift-\" + result\n  return result\n}\n\nfunction normalize(map) {\n  let copy = Object.create(null)\n  for (let prop in map) copy[normalizeKeyName(prop)] = map[prop]\n  return copy\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) name = \"Alt-\" + name\n  if (event.ctrlKey) name = \"Ctrl-\" + name\n  if (event.metaKey) name = \"Meta-\" + name\n  if (shift !== false && event.shiftKey) name = \"Shift-\" + name\n  return name\n}\n\n// :: (Object) \u2192 Plugin\n// Create a keymap plugin for the given set of bindings.\n//\n// Bindings should map key names to [command](#commands)-style\n// functions, which will be called with `(EditorState, dispatch,\n// EditorView)` arguments, and should return true when they've handled\n// the key. Note that the view argument isn't part of the command\n// protocol, but can be used as an escape hatch if a binding needs to\n// directly interact with the UI.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`\u2014a key\n// identifier prefixed with zero or more modifiers. Key identifiers\n// are based on the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized. For characters that are created by holding\n// shift, the `Shift-` prefix is implied, and should not be added\n// explicitly.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap plugins to an editor. The order in\n// which they appear determines their precedence (the ones early in\n// the array get to dispatch first).\nexport function keymap(bindings) {\n  return new Plugin({props: {handleKeyDown: keydownHandler(bindings)}})\n}\n\n// :: (Object) \u2192 (view: EditorView, event: dom.Event) \u2192 bool\n// Given a set of bindings (using the same format as\n// [`keymap`](#keymap.keymap), return a [keydown\n// handler](#view.EditorProps.handleKeyDown) that handles them.\nexport function keydownHandler(bindings) {\n  let map = normalize(bindings)\n  return function(view, event) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \", baseName\n    let direct = map[modifiers(name, event, !isChar)]\n    if (direct && direct(view.state, view.dispatch, view)) return true\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n        (baseName = base[event.keyCode]) && baseName != name) {\n      // Try falling back to the keyCode when there's a modifier\n      // active or the character produced isn't ASCII, and our table\n      // produces a different name from the the keyCode. See #668,\n      // #1060\n      let fromCode = map[modifiers(baseName, event, true)]\n      if (fromCode && fromCode(view.state, view.dispatch, view)) return true\n    } else if (isChar && event.shiftKey) {\n      // Otherwise, if shift is active, also try the binding with the\n      // Shift- prefix enabled. See #997\n      let withShift = map[modifiers(name, event, true)]\n      if (withShift && withShift(view.state, view.dispatch, view)) return true\n    }\n    return false\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
