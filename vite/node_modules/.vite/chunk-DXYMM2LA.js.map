{
  "version": 3,
  "sources": ["../../../node_modules/refractor/lang/css.js"],
  "sourcesContent": ["'use strict'\n\nmodule.exports = css\ncss.displayName = 'css'\ncss.aliases = []\nfunction css(Prism) {\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: RegExp(\n        '[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n          string.source +\n          ')*(?=\\\\s*\\\\{)'\n      ),\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      important: /!important\\b/i,\n      function: /[-a-z0-9]+(?=\\()/i,\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      Prism.languages.insertBefore(\n        'inside',\n        'attr-value',\n        {\n          'style-attr': {\n            pattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n            lookbehind: true,\n            inside: {\n              'attr-value': {\n                pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n                inside: {\n                  style: {\n                    pattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n                    lookbehind: true,\n                    alias: 'language-css',\n                    inside: Prism.languages.css\n                  },\n                  punctuation: [\n                    {\n                      pattern: /^=/,\n                      alias: 'attr-equals'\n                    },\n                    /\"|'/\n                  ]\n                }\n              },\n              'attr-name': /^style/i\n            }\n          }\n        },\n        markup.tag\n      )\n    }\n  })(Prism)\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,QAAI,cAAc;AAClB,QAAI,UAAU;AACd,iBAAa,OAAO;AAClB;AAAC,MAAC,UAAU,QAAO;AACjB,YAAI,SAAS;AACb,eAAM,UAAU,MAAM;AAAA,UACpB,SAAS;AAAA,UACT,QAAQ;AAAA,YACN,SAAS;AAAA,YACT,QAAQ;AAAA,cACN,MAAM;AAAA,cACN,8BAA8B;AAAA,gBAC5B,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,OAAO;AAAA;AAAA,cAET,SAAS;AAAA,gBACP,SAAS;AAAA,gBACT,YAAY;AAAA;AAAA;AAAA;AAAA,UAIlB,KAAK;AAAA,YAEH,SAAS,OACP,iBACE,OAAO,SACP,MACA,8BAA8B,SAC9B,QACF;AAAA,YAEF,QAAQ;AAAA,YACR,QAAQ;AAAA,cACN,UAAU;AAAA,cACV,aAAa;AAAA,cACb,QAAQ;AAAA,gBACN,SAAS,OAAO,MAAM,OAAO,SAAS;AAAA,gBACtC,OAAO;AAAA;AAAA;AAAA;AAAA,UAIb,UAAU,OACR,2CACE,OAAO,SACP;AAAA,UAEJ,QAAQ;AAAA,YACN,SAAS;AAAA,YACT,QAAQ;AAAA;AAAA,UAEV,UAAU;AAAA,UACV,WAAW;AAAA,UACX,UAAU;AAAA,UACV,aAAa;AAAA;AAEf,eAAM,UAAU,IAAI,UAAU,OAAO,OAAO,OAAM,UAAU;AAC5D,YAAI,SAAS,OAAM,UAAU;AAC7B,YAAI,QAAQ;AACV,iBAAO,IAAI,WAAW,SAAS;AAC/B,iBAAM,UAAU,aACd,UACA,cACA;AAAA,YACE,cAAc;AAAA,cACZ,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,cAAc;AAAA,kBACZ,SAAS;AAAA,kBACT,QAAQ;AAAA,oBACN,OAAO;AAAA,sBACL,SAAS;AAAA,sBACT,YAAY;AAAA,sBACZ,OAAO;AAAA,sBACP,QAAQ,OAAM,UAAU;AAAA;AAAA,oBAE1B,aAAa;AAAA,sBACX;AAAA,wBACE,SAAS;AAAA,wBACT,OAAO;AAAA;AAAA,sBAET;AAAA;AAAA;AAAA;AAAA,gBAIN,aAAa;AAAA;AAAA;AAAA,aAInB,OAAO;AAAA;AAAA,SAGV;AAAA;AAAA;AAAA;",
  "names": []
}
