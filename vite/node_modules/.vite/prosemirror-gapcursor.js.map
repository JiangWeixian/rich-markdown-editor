{
  "version": 3,
  "sources": ["../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/browser.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/dom.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/domcoords.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/viewdesc.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/selection.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/capturekeys.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/domchange.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/clipboard.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/domobserver.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/input.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/decoration.js", "../../../node_modules/prosemirror-gapcursor/node_modules/prosemirror-view/src/index.js", "../../../node_modules/prosemirror-gapcursor/src/gapcursor.js", "../../../node_modules/prosemirror-gapcursor/src/index.js"],
  "sourcesContent": ["const result = {}\nexport default result\n\nif (typeof navigator != \"undefined\" && typeof document != \"undefined\") {\n  const ie_edge = /Edge\\/(\\d+)/.exec(navigator.userAgent)\n  const ie_upto10 = /MSIE \\d/.test(navigator.userAgent)\n  const ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n  result.mac = /Mac/.test(navigator.platform)\n  let ie = result.ie = !!(ie_upto10 || ie_11up || ie_edge)\n  result.ie_version = ie_upto10 ? document.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : null\n  result.gecko = !ie && /gecko\\/(\\d+)/i.test(navigator.userAgent)\n  result.gecko_version = result.gecko && +(/Firefox\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n  let chrome = !ie && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\n  result.chrome = !!chrome\n  result.chrome_version = chrome && +chrome[1]\n  // Is true for both iOS and iPadOS for convenience\n  result.safari = !ie && /Apple Computer/.test(navigator.vendor)\n  result.ios = result.safari && (/Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2)\n  result.android = /Android \\d/.test(navigator.userAgent)\n  result.webkit = \"webkitFontSmoothing\" in document.documentElement.style\n  result.webkit_version = result.webkit && +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n}\n", "import browser from \"./browser\"\n\nexport const domIndex = function(node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling\n    if (!node) return index\n  }\n}\n\nexport const parentNode = function(node) {\n  let parent = node.assignedSlot || node.parentNode\n  return parent && parent.nodeType == 11 ? parent.host : parent\n}\n\nlet reusedRange = null\n\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nexport const textRange = function(node, from, to) {\n  let range = reusedRange || (reusedRange = document.createRange())\n  range.setEnd(node, to == null ? node.nodeValue.length : to)\n  range.setStart(node, from || 0)\n  return range\n}\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nexport const isEquivalentPosition = function(node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n                        scanFor(node, off, targetNode, targetOff, 1))\n}\n\nconst atomElements = /^(img|br|input|textarea|hr)$/i\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      let parent = node.parentNode\n      if (parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) || node.contentEditable == \"false\")\n        return false\n      off = domIndex(node) + (dir < 0 ? 0 : 1)\n      node = parent\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)]\n      if (node.contentEditable == \"false\") return false\n      off = dir < 0 ? nodeSize(node) : 0\n    } else {\n      return false\n    }\n  }\n}\n\nexport function nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nexport function isOnEdge(node, offset, parent) {\n  for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n    if (node == parent) return true\n    let index = domIndex(node)\n    node = node.parentNode\n    if (!node) return false\n    atStart = atStart && index == 0\n    atEnd = atEnd && index == nodeSize(node)\n  }\n}\n\nfunction hasBlockDesc(dom) {\n  let desc\n  for (let cur = dom; cur; cur = cur.parentNode) if (desc = cur.pmViewDesc) break\n  return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom)\n}\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nexport const selectionCollapsed = function(domSel) {\n  let collapsed = domSel.isCollapsed\n  if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    collapsed = false\n  return collapsed\n}\n\nexport function keyEvent(keyCode, key) {\n  let event = document.createEvent(\"Event\")\n  event.initEvent(\"keydown\", true, true)\n  event.keyCode = keyCode\n  event.key = event.code = key\n  return event\n}\n", "import {nodeSize, textRange, parentNode} from \"./dom\"\nimport browser from \"./browser\"\n\nfunction windowRect(doc) {\n  return {left: 0, right: doc.documentElement.clientWidth,\n          top: 0, bottom: doc.documentElement.clientHeight}\n}\n\nfunction getSide(value, side) {\n  return typeof value == \"number\" ? value : value[side]\n}\n\nfunction clientRect(node) {\n  let rect = node.getBoundingClientRect()\n  // Adjust for elements with style \"transform: scale()\"\n  let scaleX = (rect.width / node.offsetWidth) || 1\n  let scaleY = (rect.height / node.offsetHeight) || 1\n  // Make sure scrollbar width isn't included in the rectangle\n  return {left: rect.left, right: rect.left + node.clientWidth * scaleX,\n          top: rect.top, bottom: rect.top + node.clientHeight * scaleY}\n}\n\nexport function scrollRectIntoView(view, rect, startDOM) {\n  let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5\n  let doc = view.dom.ownerDocument\n  for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n    if (!parent) break\n    if (parent.nodeType != 1) continue\n    let atTop = parent == doc.body || parent.nodeType != 1\n    let bounding = atTop ? windowRect(doc) : clientRect(parent)\n    let moveX = 0, moveY = 0\n    if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n      moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"))\n    else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n      moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\")\n    if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n      moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"))\n    else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n      moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\")\n    if (moveX || moveY) {\n      if (atTop) {\n        doc.defaultView.scrollBy(moveX, moveY)\n      } else {\n        let startX = parent.scrollLeft, startY = parent.scrollTop\n        if (moveY) parent.scrollTop += moveY\n        if (moveX) parent.scrollLeft += moveX\n        let dX = parent.scrollLeft - startX, dY = parent.scrollTop - startY\n        rect = {left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY}\n      }\n    }\n    if (atTop) break\n  }\n}\n\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nexport function storeScrollPos(view) {\n  let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top)\n  let refDOM, refTop\n  for (let x = (rect.left + rect.right) / 2, y = startY + 1;\n       y < Math.min(innerHeight, rect.bottom); y += 5) {\n    let dom = view.root.elementFromPoint(x, y)\n    if (dom == view.dom || !view.dom.contains(dom)) continue\n    let localRect = dom.getBoundingClientRect()\n    if (localRect.top >= startY - 20) {\n      refDOM = dom\n      refTop = localRect.top\n      break\n    }\n  }\n  return {refDOM, refTop, stack: scrollStack(view.dom)}\n}\n\nfunction scrollStack(dom) {\n  let stack = [], doc = dom.ownerDocument\n  for (; dom; dom = parentNode(dom)) {\n    stack.push({dom, top: dom.scrollTop, left: dom.scrollLeft})\n    if (dom == doc) break\n  }\n  return stack\n}\n\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nexport function resetScrollPos({refDOM, refTop, stack}) {\n  let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0\n  restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop)\n}\n\nfunction restoreScrollStack(stack, dTop) {\n  for (let i = 0; i < stack.length; i++) {\n    let {dom, top, left} = stack[i]\n    if (dom.scrollTop != top + dTop) dom.scrollTop = top + dTop\n    if (dom.scrollLeft != left) dom.scrollLeft = left\n  }\n}\n\nlet preventScrollSupported = null\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nexport function focusPreventScroll(dom) {\n  if (dom.setActive) return dom.setActive() // in IE\n  if (preventScrollSupported) return dom.focus(preventScrollSupported)\n\n  let stored = scrollStack(dom)\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {preventScroll: true}\n      return true\n    }\n  } : undefined)\n  if (!preventScrollSupported) {\n    preventScrollSupported = false\n    restoreScrollStack(stored, 0)\n  }\n}\n\nfunction findOffsetInNode(node, coords) {\n  let closest, dxClosest = 2e8, coordsClosest, offset = 0\n  let rowBot = coords.top, rowTop = coords.top\n  for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    let rects\n    if (child.nodeType == 1) rects = child.getClientRects()\n    else if (child.nodeType == 3) rects = textRange(child).getClientRects()\n    else continue\n\n    for (let i = 0; i < rects.length; i++) {\n      let rect = rects[i]\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot)\n        rowTop = Math.min(rect.top, rowTop)\n        let dx = rect.left > coords.left ? rect.left - coords.left\n            : rect.right < coords.left ? coords.left - rect.right : 0\n        if (dx < dxClosest) {\n          closest = child\n          dxClosest = dx\n          coordsClosest = dx && closest.nodeType == 3 ? {left: rect.right < coords.left ? rect.right : rect.left, top: coords.top} : coords\n          if (child.nodeType == 1 && dx)\n            offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)\n          continue\n        }\n      }\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                       coords.left >= rect.left && coords.top >= rect.bottom))\n        offset = childIndex + 1\n    }\n  }\n  if (closest && closest.nodeType == 3) return findOffsetInText(closest, coordsClosest)\n  if (!closest || (dxClosest && closest.nodeType == 1)) return {node, offset}\n  return findOffsetInNode(closest, coordsClosest)\n}\n\nfunction findOffsetInText(node, coords) {\n  let len = node.nodeValue.length\n  let range = document.createRange()\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1)\n    range.setStart(node, i)\n    let rect = singleRect(range, 1)\n    if (rect.top == rect.bottom) continue\n    if (inRect(coords, rect))\n      return {node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)}\n  }\n  return {node, offset: 0}\n}\n\nfunction inRect(coords, rect) {\n  return coords.left >= rect.left - 1 && coords.left <= rect.right + 1&&\n    coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1\n}\n\nfunction targetKludge(dom, coords) {\n  let parent = dom.parentNode\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n    return parent\n  return dom\n}\n\nfunction posFromElement(view, elt, coords) {\n  let {node, offset} = findOffsetInNode(elt, coords), bias = -1\n  if (node.nodeType == 1 && !node.firstChild) {\n    let rect = node.getBoundingClientRect()\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1\n  }\n  return view.docView.posFromDOM(node, offset, bias)\n}\n\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  let outside = -1\n  for (let cur = node;;) {\n    if (cur == view.dom) break\n    let desc = view.docView.nearestDesc(cur, true)\n    if (!desc) return null\n    if (desc.node.isBlock && desc.parent) {\n      let rect = desc.dom.getBoundingClientRect()\n      if (rect.left > coords.left || rect.top > coords.top) outside = desc.posBefore\n      else if (rect.right < coords.left || rect.bottom < coords.top) outside = desc.posAfter\n      else break\n    }\n    cur = desc.dom.parentNode\n  }\n  return outside > -1 ? outside : view.docView.posFromDOM(node, offset)\n}\n\nfunction elementFromPoint(element, coords, box) {\n  let len = element.childNodes.length\n  if (len && box.top < box.bottom) {\n    for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n      let child = element.childNodes[i]\n      if (child.nodeType == 1) {\n        let rects = child.getClientRects()\n        for (let j = 0; j < rects.length; j++) {\n          let rect = rects[j]\n          if (inRect(coords, rect)) return elementFromPoint(child, coords, rect)\n        }\n      }\n      if ((i = (i + 1) % len) == startI) break\n    }\n  }\n  return element\n}\n\n// Given an x,y position on the editor, get the position in the document.\nexport function posAtCoords(view, coords) {\n  let root = view.root, node, offset\n  if (root.caretPositionFromPoint) {\n    try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n      let pos = root.caretPositionFromPoint(coords.left, coords.top)\n      if (pos) ({offsetNode: node, offset} = pos)\n    } catch (_) {}\n  }\n  if (!node && root.caretRangeFromPoint) {\n    let range = root.caretRangeFromPoint(coords.left, coords.top)\n    if (range) ({startContainer: node, startOffset: offset} = range)\n  }\n\n  let elt = root.elementFromPoint(coords.left, coords.top + 1), pos\n  if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n    let box = view.dom.getBoundingClientRect()\n    if (!inRect(coords, box)) return null\n    elt = elementFromPoint(view.dom, coords, box)\n    if (!elt) return null\n  }\n  // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n  if (browser.safari && elt.draggable) node = offset = null\n  elt = targetKludge(elt, coords)\n  if (node) {\n    if (browser.gecko && node.nodeType == 1) {\n      // Firefox will sometimes return offsets into <input> nodes, which\n      // have no actual children, from caretPositionFromPoint (#953)\n      offset = Math.min(offset, node.childNodes.length)\n      // It'll also move the returned position before image nodes,\n      // even if those are behind it.\n      if (offset < node.childNodes.length) {\n        let next = node.childNodes[offset], box\n        if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n            box.bottom > coords.top)\n          offset++\n      }\n    }\n    // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n        coords.top > node.lastChild.getBoundingClientRect().bottom)\n      pos = view.state.doc.content.size\n    // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately placed\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n      pos = posFromCaret(view, node, offset, coords)\n  }\n  if (pos == null) pos = posFromElement(view, elt, coords)\n\n  let desc = view.docView.nearestDesc(elt, true)\n  return {pos, inside: desc ? desc.posAtStart - desc.border : -1}\n}\n\nfunction singleRect(object, bias) {\n  let rects = object.getClientRects()\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1]\n}\n\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/\n\n// : (EditorView, number, number) \u2192 {left: number, top: number, right: number, bottom: number}\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nexport function coordsAtPos(view, pos, side) {\n  let {node, offset} = view.docView.domFromPos(pos, side < 0 ? -1 : 1)\n\n  let supportEmptyRange = browser.webkit || browser.gecko\n  if (node.nodeType == 3) {\n    // These browsers support querying empty text ranges. Prefer that in\n    // bidi context or when at the end of a node.\n    if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n      let rect = singleRect(textRange(node, offset, offset), side)\n      // Firefox returns bad results (the position before the space)\n      // when querying a position directly after line-broken\n      // whitespace. Detect this situation and and kludge around it\n      if (browser.gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n        let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1)\n        if (rectBefore.top == rect.top) {\n          let rectAfter = singleRect(textRange(node, offset, offset + 1), -1)\n          if (rectAfter.top != rect.top)\n            return flattenV(rectAfter, rectAfter.left < rectBefore.left)\n        }\n      }\n      return rect\n    } else {\n      let from = offset, to = offset, takeSide = side < 0 ? 1 : -1\n      if (side < 0 && !offset) { to++; takeSide = -1 }\n      else if (side >= 0 && offset == node.nodeValue.length) { from--; takeSide = 1 }\n      else if (side < 0) { from-- }\n      else { to ++ }\n      return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0)\n    }\n  }\n\n  // Return a horizontal line in block context\n  if (!view.state.doc.resolve(pos).parent.inlineContent) {\n    if (offset && (side < 0 || offset == nodeSize(node))) {\n      let before = node.childNodes[offset - 1]\n      if (before.nodeType == 1) return flattenH(before.getBoundingClientRect(), false)\n    }\n    if (offset < nodeSize(node)) {\n      let after = node.childNodes[offset]\n      if (after.nodeType == 1) return flattenH(after.getBoundingClientRect(), true)\n    }\n    return flattenH(node.getBoundingClientRect(), side >= 0)\n  }\n\n  // Inline, not in text node (this is not Bidi-safe)\n  if (offset && (side < 0 || offset == nodeSize(node))) {\n    let before = node.childNodes[offset - 1]\n    let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n        // BR nodes tend to only return the rectangle before them.\n        // Only use them if they are the last element in their parent\n        : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null\n    if (target) return flattenV(singleRect(target, 1), false)\n  }\n  if (offset < nodeSize(node)) {\n    let after = node.childNodes[offset]\n    let target = after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n        : after.nodeType == 1 ? after : null\n    if (target) return flattenV(singleRect(target, -1), true)\n  }\n  // All else failed, just try to get a rectangle for the target node\n  return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0)\n}\n\nfunction flattenV(rect, left) {\n  if (rect.width == 0) return rect\n  let x = left ? rect.left : rect.right\n  return {top: rect.top, bottom: rect.bottom, left: x, right: x}\n}\n\nfunction flattenH(rect, top) {\n  if (rect.height == 0) return rect\n  let y = top ? rect.top : rect.bottom\n  return {top: y, bottom: y, left: rect.left, right: rect.right}\n}\n\nfunction withFlushedState(view, state, f) {\n  let viewState = view.state, active = view.root.activeElement\n  if (viewState != state) view.updateState(state)\n  if (active != view.dom) view.focus()\n  try {\n    return f()\n  } finally {\n    if (viewState != state) view.updateState(viewState)\n    if (active != view.dom && active) active.focus()\n  }\n}\n\n// : (EditorView, number, number)\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n  let sel = state.selection\n  let $pos = dir == \"up\" ? sel.$from : sel.$to\n  return withFlushedState(view, state, () => {\n    let {node: dom} = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1)\n    for (;;) {\n      let nearest = view.docView.nearestDesc(dom, true)\n      if (!nearest) break\n      if (nearest.node.isBlock) { dom = nearest.dom; break }\n      dom = nearest.dom.parentNode\n    }\n    let coords = coordsAtPos(view, $pos.pos, 1)\n    for (let child = dom.firstChild; child; child = child.nextSibling) {\n      let boxes\n      if (child.nodeType == 1) boxes = child.getClientRects()\n      else if (child.nodeType == 3) boxes = textRange(child, 0, child.nodeValue.length).getClientRects()\n      else continue\n      for (let i = 0; i < boxes.length; i++) {\n        let box = boxes[i]\n        if (box.bottom > box.top && (dir == \"up\" ? box.bottom < coords.top + 1 : box.top > coords.bottom - 1))\n          return false\n      }\n    }\n    return true\n  })\n}\n\nconst maybeRTL = /[\\u0590-\\u08ac]/\n\nfunction endOfTextblockHorizontal(view, state, dir) {\n  let {$head} = state.selection\n  if (!$head.parent.isTextblock) return false\n  let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size\n  let sel = getSelection()\n  // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n    return dir == \"left\" || dir == \"backward\" ? atStart : atEnd\n\n  return withFlushedState(view, state, () => {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    let oldRange = sel.getRangeAt(0), oldNode = sel.focusNode, oldOff = sel.focusOffset\n    let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n    sel.modify(\"move\", dir, \"character\")\n    let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom\n    let result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) ||\n        (oldNode == sel.focusNode && oldOff == sel.focusOffset)\n    // Restore the previous selection\n    sel.removeAllRanges()\n    sel.addRange(oldRange)\n    if (oldBidiLevel != null) sel.caretBidiLevel = oldBidiLevel\n    return result\n  })\n}\n\nlet cachedState = null, cachedDir = null, cachedResult = false\nexport function endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) return cachedResult\n  cachedState = state; cachedDir = dir\n  return cachedResult = dir == \"up\" || dir == \"down\"\n    ? endOfTextblockVertical(view, state, dir)\n    : endOfTextblockHorizontal(view, state, dir)\n}\n", "import {DOMSerializer, Fragment, Mark} from \"prosemirror-model\"\nimport {TextSelection} from \"prosemirror-state\"\n\nimport {domIndex, isEquivalentPosition, nodeSize} from \"./dom\"\nimport browser from \"./browser\"\n\n// NodeView:: interface\n//\n// By default, document nodes are rendered using the result of the\n// [`toDOM`](#model.NodeSpec.toDOM) method of their spec, and managed\n// entirely by the editor. For some use cases, such as embedded\n// node-specific editing interfaces, you want more control over\n// the behavior of a node's in-editor representation, and need to\n// [define](#view.EditorProps.nodeViews) a custom node view.\n//\n// Mark views only support `dom` and `contentDOM`, and don't support\n// any of the node view methods.\n//\n// Objects returned as node views must conform to this interface.\n//\n//   dom:: ?dom.Node\n//   The outer DOM node that represents the document node. When not\n//   given, the default strategy is used to create a DOM node.\n//\n//   contentDOM:: ?dom.Node\n//   The DOM node that should hold the node's content. Only meaningful\n//   if the node view also defines a `dom` property and if its node\n//   type is not a leaf node type. When this is present, ProseMirror\n//   will take care of rendering the node's children into it. When it\n//   is not present, the node view itself is responsible for rendering\n//   (or deciding not to render) its child nodes.\n//\n//   update:: ?(node: Node, decorations: [Decoration], innerDecorations: DecorationSource) \u2192 bool\n//   When given, this will be called when the view is updating itself.\n//   It will be given a node (possibly of a different type), an array\n//   of active decorations around the node (which are automatically\n//   drawn, and the node view may ignore if it isn't interested in\n//   them), and a [decoration source](#view.DecorationSource) that\n//   represents any decorations that apply to the content of the node\n//   (which again may be ignored). It should return true if it was\n//   able to update to that node, and false otherwise. If the node\n//   view has a `contentDOM` property (or no `dom` property), updating\n//   its child nodes will be handled by ProseMirror.\n//\n//   selectNode:: ?()\n//   Can be used to override the way the node's selected status (as a\n//   node selection) is displayed.\n//\n//   deselectNode:: ?()\n//   When defining a `selectNode` method, you should also provide a\n//   `deselectNode` method to remove the effect again.\n//\n//   setSelection:: ?(anchor: number, head: number, root: dom.Document)\n//   This will be called to handle setting the selection inside the\n//   node. The `anchor` and `head` positions are relative to the start\n//   of the node. By default, a DOM selection will be created between\n//   the DOM positions corresponding to those positions, but if you\n//   override it you can do something else.\n//\n//   stopEvent:: ?(event: dom.Event) \u2192 bool\n//   Can be used to prevent the editor view from trying to handle some\n//   or all DOM events that bubble up from the node view. Events for\n//   which this returns true are not handled by the editor.\n//\n//   ignoreMutation:: ?(dom.MutationRecord) \u2192 bool\n//   Called when a DOM\n//   [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n//   or a selection change happens within the view. When the change is\n//   a selection change, the record will have a `type` property of\n//   `\"selection\"` (which doesn't occur for native mutation records).\n//   Return false if the editor should re-read the selection or\n//   re-parse the range around the mutation, true if it can safely be\n//   ignored.\n//\n//   destroy:: ?()\n//   Called when the node view is removed from the editor or the whole\n//   editor is destroyed. (Not available for marks.)\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\n\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3\n\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n  // : (?ViewDesc, [ViewDesc], dom.Node, ?dom.Node)\n  constructor(parent, children, dom, contentDOM) {\n    this.parent = parent\n    this.children = children\n    this.dom = dom\n    // An expando property on the DOM node provides a link back to its\n    // description.\n    dom.pmViewDesc = this\n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    this.contentDOM = contentDOM\n    this.dirty = NOT_DIRTY\n  }\n\n  // Used to check whether a given description corresponds to a\n  // widget/mark/node.\n  matchesWidget() { return false }\n  matchesMark() { return false }\n  matchesNode() { return false }\n  matchesHack() { return false }\n\n  get beforePosition() { return false }\n\n  // : () \u2192 ?ParseRule\n  // When parsing in-editor content (in domchange.js), we allow\n  // descriptions to determine the parse rules that should be used to\n  // parse them.\n  parseRule() { return null }\n\n  // : (dom.Event) \u2192 bool\n  // Used by the editor's event handler to ignore events that come\n  // from certain descs.\n  stopEvent() { return false }\n\n  // The size of the content represented by this desc.\n  get size() {\n    let size = 0\n    for (let i = 0; i < this.children.length; i++) size += this.children[i].size\n    return size\n  }\n\n  // For block nodes, this represents the space taken up by their\n  // start/end tokens.\n  get border() { return 0 }\n\n  destroy() {\n    this.parent = null\n    if (this.dom.pmViewDesc == this) this.dom.pmViewDesc = null\n    for (let i = 0; i < this.children.length; i++)\n      this.children[i].destroy()\n  }\n\n  posBeforeChild(child) {\n    for (let i = 0, pos = this.posAtStart; i < this.children.length; i++) {\n      let cur = this.children[i]\n      if (cur == child) return pos\n      pos += cur.size\n    }\n  }\n\n  get posBefore() {\n    return this.parent.posBeforeChild(this)\n  }\n\n  get posAtStart() {\n    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0\n  }\n\n  get posAfter() {\n    return this.posBefore + this.size\n  }\n\n  get posAtEnd() {\n    return this.posAtStart + this.size - 2 * this.border\n  }\n\n  // : (dom.Node, number, ?number) \u2192 number\n  localPosFromDOM(dom, offset, bias) {\n    // If the DOM position is in the content, use the child desc after\n    // it to figure out a position.\n    if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n      if (bias < 0) {\n        let domBefore, desc\n        if (dom == this.contentDOM) {\n          domBefore = dom.childNodes[offset - 1]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domBefore = dom.previousSibling\n        }\n        while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) domBefore = domBefore.previousSibling\n        return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart\n      } else {\n        let domAfter, desc\n        if (dom == this.contentDOM) {\n          domAfter = dom.childNodes[offset]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domAfter = dom.nextSibling\n        }\n        while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this)) domAfter = domAfter.nextSibling\n        return domAfter ? this.posBeforeChild(desc) : this.posAtEnd\n      }\n    }\n    // Otherwise, use various heuristics, falling back on the bias\n    // parameter, to determine whether to return the position at the\n    // start or at the end of this view desc.\n    let atEnd\n    if (dom == this.dom && this.contentDOM) {\n      atEnd = offset > domIndex(this.contentDOM)\n    } else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n      atEnd = dom.compareDocumentPosition(this.contentDOM) & 2\n    } else if (this.dom.firstChild) {\n      if (offset == 0) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = false; break }\n        if (search.parentNode.firstChild != search) break\n      }\n      if (atEnd == null && offset == dom.childNodes.length) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = true; break }\n        if (search.parentNode.lastChild != search) break\n      }\n    }\n    return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart\n  }\n\n  // Scan up the dom finding the first desc that is a descendant of\n  // this one.\n  nearestDesc(dom, onlyNodes) {\n    for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n      let desc = this.getDesc(cur)\n      if (desc && (!onlyNodes || desc.node)) {\n        // If dom is outside of this desc's nodeDOM, don't count it.\n        if (first && desc.nodeDOM &&\n            !(desc.nodeDOM.nodeType == 1 ? desc.nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : desc.nodeDOM == dom))\n          first = false\n        else\n          return desc\n      }\n    }\n  }\n\n  getDesc(dom) {\n    let desc = dom.pmViewDesc\n    for (let cur = desc; cur; cur = cur.parent) if (cur == this) return desc\n  }\n\n  posFromDOM(dom, offset, bias) {\n    for (let scan = dom; scan; scan = scan.parentNode) {\n      let desc = this.getDesc(scan)\n      if (desc) return desc.localPosFromDOM(dom, offset, bias)\n    }\n    return -1\n  }\n\n  // : (number) \u2192 ?NodeViewDesc\n  // Find the desc for the node after the given pos, if any. (When a\n  // parent node overrode rendering, there might not be one.)\n  descAt(pos) {\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == pos && end != offset) {\n        while (!child.border && child.children.length) child = child.children[0]\n        return child\n      }\n      if (pos < end) return child.descAt(pos - offset - child.border)\n      offset = end\n    }\n  }\n\n  // : (number, number) \u2192 {node: dom.Node, offset: number}\n  domFromPos(pos, side) {\n    if (!this.contentDOM) return {node: this.dom, offset: 0}\n    for (let offset = 0, i = 0, first = true;; i++, first = false) {\n      // Skip removed or always-before children\n      while (i < this.children.length && (this.children[i].beforePosition ||\n                                          this.children[i].dom.parentNode != this.contentDOM))\n        offset += this.children[i++].size\n      let child = i == this.children.length ? null : this.children[i]\n      if (offset == pos && (side == 0 || !child || !child.size || child.border || (side < 0 && first)) ||\n          child && child.domAtom && pos < offset + child.size) return {\n        node: this.contentDOM,\n        offset: child ? domIndex(child.dom) : this.contentDOM.childNodes.length\n      }\n      if (!child) throw new Error(\"Invalid position \" + pos)\n      let end = offset + child.size\n      if (!child.domAtom && (side < 0 && !child.border ? end >= pos : end > pos) &&\n          (end > pos || i + 1 >= this.children.length || !this.children[i + 1].beforePosition))\n        return child.domFromPos(pos - offset - child.border, side)\n      offset = end\n    }\n  }\n\n  // Used to find a DOM range in a single parent for a given changed\n  // range.\n  parseRange(from, to, base = 0) {\n    if (this.children.length == 0)\n      return {node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length}\n\n    let fromOffset = -1, toOffset = -1\n    for (let offset = base, i = 0;; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (fromOffset == -1 && from <= end) {\n        let childBase = offset + child.border\n        // FIXME maybe descend mark views to parse a narrower range?\n        if (from >= childBase && to <= end - child.border && child.node &&\n            child.contentDOM && this.contentDOM.contains(child.contentDOM))\n          return child.parseRange(from, to, childBase)\n\n        from = offset\n        for (let j = i; j > 0; j--) {\n          let prev = this.children[j - 1]\n          if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n            fromOffset = domIndex(prev.dom) + 1\n            break\n          }\n          from -= prev.size\n        }\n        if (fromOffset == -1) fromOffset = 0\n      }\n      if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n        to = end\n        for (let j = i + 1; j < this.children.length; j++) {\n          let next = this.children[j]\n          if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n            toOffset = domIndex(next.dom)\n            break\n          }\n          to += next.size\n        }\n        if (toOffset == -1) toOffset = this.contentDOM.childNodes.length\n        break\n      }\n      offset = end\n    }\n    return {node: this.contentDOM, from, to, fromOffset, toOffset}\n  }\n\n  emptyChildAt(side) {\n    if (this.border || !this.contentDOM || !this.children.length) return false\n    let child = this.children[side < 0 ? 0 : this.children.length - 1]\n    return child.size == 0 || child.emptyChildAt(side)\n  }\n\n  // : (number) \u2192 dom.Node\n  domAfterPos(pos) {\n    let {node, offset} = this.domFromPos(pos, 0)\n    if (node.nodeType != 1 || offset == node.childNodes.length)\n      throw new RangeError(\"No node after pos \" + pos)\n    return node.childNodes[offset]\n  }\n\n  // : (number, number, dom.Document)\n  // View descs are responsible for setting any selection that falls\n  // entirely inside of them, so that custom implementations can do\n  // custom things with the selection. Note that this falls apart when\n  // a selection starts in such a node and ends in another, in which\n  // case we just use whatever domFromPos produces as a best effort.\n  setSelection(anchor, head, root, force) {\n    // If the selection falls entirely in a child, give it to that child\n    let from = Math.min(anchor, head), to = Math.max(anchor, head)\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (from > offset && to < end)\n        return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force)\n      offset = end\n    }\n\n    let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1)\n    let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1)\n    let domSel = root.getSelection()\n\n    let brKludge = false\n    // On Firefox, using Selection.collapse to put the cursor after a\n    // BR node for some reason doesn't always work (#1073). On Safari,\n    // the cursor sometimes inexplicable visually lags behind its\n    // reported position in such situations (#1092).\n    if ((browser.gecko || browser.safari) && anchor == head) {\n      let {node, offset} = anchorDOM\n      if (node.nodeType == 3) {\n        brKludge = offset && node.nodeValue[offset - 1] == \"\\n\"\n        // Issue #1128\n        if (brKludge && offset == node.nodeValue.length &&\n            node.nextSibling && node.nextSibling.nodeName == \"BR\")\n          anchorDOM = headDOM = {node: node.parentNode, offset: domIndex(node) + 1}\n      } else {\n        let prev = node.childNodes[offset - 1]\n        brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\")\n      }\n    }\n\n    if (!(force || brKludge && browser.safari) &&\n        isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n        isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n      return\n\n    // Selection.extend can be used to create an 'inverted' selection\n    // (one where the focus is before the anchor), but not all\n    // browsers support it yet.\n    let domSelExtended = false\n    if ((domSel.extend || anchor == head) && !brKludge) {\n      domSel.collapse(anchorDOM.node, anchorDOM.offset)\n      try {\n        if (anchor != head) domSel.extend(headDOM.node, headDOM.offset)\n        domSelExtended = true\n      } catch (err) {\n        // In some cases with Chrome the selection is empty after calling\n        // collapse, even when it should be valid. This appears to be a bug, but\n        // it is difficult to isolate. If this happens fallback to the old path\n        // without using extend.\n        if (!(err instanceof DOMException)) throw err\n        // declare global: DOMException\n      }\n    }\n    if (!domSelExtended) {\n      if (anchor > head) { let tmp = anchorDOM; anchorDOM = headDOM; headDOM = tmp }\n      let range = document.createRange()\n      range.setEnd(headDOM.node, headDOM.offset)\n      range.setStart(anchorDOM.node, anchorDOM.offset)\n      domSel.removeAllRanges()\n      domSel.addRange(range)\n    }\n  }\n\n  // : (dom.MutationRecord) \u2192 bool\n  ignoreMutation(mutation) {\n    return !this.contentDOM && mutation.type != \"selection\"\n  }\n\n  get contentLost() {\n    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM)\n  }\n\n  // Remove a subtree of the element tree that has been touched\n  // by a DOM change, so that the next update will redraw it.\n  markDirty(from, to) {\n    for (let offset = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n        let startInside = offset + child.border, endInside = end - child.border\n        if (from >= startInside && to <= endInside) {\n          this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY\n          if (from == startInside && to == endInside &&\n              (child.contentLost || child.dom.parentNode != this.contentDOM)) child.dirty = NODE_DIRTY\n          else child.markDirty(from - startInside, to - startInside)\n          return\n        } else {\n          child.dirty = NODE_DIRTY\n        }\n      }\n      offset = end\n    }\n    this.dirty = CONTENT_DIRTY\n  }\n\n  markParentsDirty() {\n    let level = 1\n    for (let node = this.parent; node; node = node.parent, level++) {\n      let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY\n      if (node.dirty < dirty) node.dirty = dirty\n    }\n  }\n\n  get domAtom() { return false }\n}\n\n// Reused array to avoid allocating fresh arrays for things that will\n// stay empty anyway.\nconst nothing = []\n\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n  // : (ViewDesc, Decoration)\n  constructor(parent, widget, view, pos) {\n    let self, dom = widget.type.toDOM\n    if (typeof dom == \"function\") dom = dom(view, () => {\n      if (!self) return pos\n      if (self.parent) return self.parent.posBeforeChild(self)\n    })\n    if (!widget.type.spec.raw) {\n      if (dom.nodeType != 1) {\n        let wrap = document.createElement(\"span\")\n        wrap.appendChild(dom)\n        dom = wrap\n      }\n      dom.contentEditable = false\n      dom.classList.add(\"ProseMirror-widget\")\n    }\n    super(parent, nothing, dom, null)\n    this.widget = widget\n    self = this\n  }\n\n  get beforePosition() {\n    return this.widget.type.side < 0\n  }\n\n  matchesWidget(widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type)\n  }\n\n  parseRule() { return {ignore: true} }\n\n  stopEvent(event) {\n    let stop = this.widget.spec.stopEvent\n    return stop ? stop(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"selection\" || this.widget.spec.ignoreSelection\n  }\n\n  get domAtom() { return true }\n}\n\nclass CompositionViewDesc extends ViewDesc {\n  constructor(parent, dom, textDOM, text) {\n    super(parent, nothing, dom, null)\n    this.textDOM = textDOM\n    this.text = text\n  }\n\n  get size() { return this.text.length }\n\n  localPosFromDOM(dom, offset) {\n    if (dom != this.textDOM) return this.posAtStart + (offset ? this.size : 0)\n    return this.posAtStart + offset\n  }\n\n  domFromPos(pos) {\n    return {node: this.textDOM, offset: pos}\n  }\n\n  ignoreMutation(mut) {\n    return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue\n   }\n}\n\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n  // : (ViewDesc, Mark, dom.Node)\n  constructor(parent, mark, dom, contentDOM) {\n    super(parent, [], dom, contentDOM)\n    this.mark = mark\n  }\n\n  static create(parent, mark, inline, view) {\n    let custom = view.nodeViews[mark.type.name]\n    let spec = custom && custom(mark, view, inline)\n    if (!spec || !spec.dom)\n      spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline))\n    return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom)\n  }\n\n  parseRule() { return {mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM} }\n\n  matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark) }\n\n  markDirty(from, to) {\n    super.markDirty(from, to)\n    // Move dirty info to nearest node view\n    if (this.dirty != NOT_DIRTY) {\n      let parent = this.parent\n      while (!parent.node) parent = parent.parent\n      if (parent.dirty < this.dirty) parent.dirty = this.dirty\n      this.dirty = NOT_DIRTY\n    }\n  }\n\n  slice(from, to, view) {\n    let copy = MarkViewDesc.create(this.parent, this.mark, true, view)\n    let nodes = this.children, size = this.size\n    if (to < size) nodes = replaceNodes(nodes, to, size, view)\n    if (from > 0) nodes = replaceNodes(nodes, 0, from, view)\n    for (let i = 0; i < nodes.length; i++) nodes[i].parent = copy\n    copy.children = nodes\n    return copy\n  }\n}\n\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSource, dom.Node, ?dom.Node, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n    super(parent, node.isLeaf ? nothing : [], dom, contentDOM)\n    this.nodeDOM = nodeDOM\n    this.node = node\n    this.outerDeco = outerDeco\n    this.innerDeco = innerDeco\n    if (contentDOM) this.updateChildren(view, pos)\n  }\n\n  // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finnicky\n  // implementation details to the user code that they probably will\n  // never need.)\n  static create(parent, node, outerDeco, innerDeco, view, pos) {\n    let custom = view.nodeViews[node.type.name], descObj\n    let spec = custom && custom(node, view, () => {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (!descObj) return pos\n      if (descObj.parent) return descObj.parent.posBeforeChild(descObj)\n    }, outerDeco, innerDeco)\n\n    let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM\n    if (node.isText) {\n      if (!dom) dom = document.createTextNode(node.text)\n      else if (dom.nodeType != 3) throw new RangeError(\"Text must be rendered as a DOM text node\")\n    } else if (!dom) {\n      ;({dom, contentDOM} = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)))\n    }\n    if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n      if (!dom.hasAttribute(\"contenteditable\")) dom.contentEditable = false\n      if (node.type.spec.draggable) dom.draggable = true\n    }\n\n    let nodeDOM = dom\n    dom = applyOuterDeco(dom, outerDeco, node)\n\n    if (spec)\n      return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM,\n                                              spec, view, pos + 1)\n    else if (node.isText)\n      return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view)\n    else\n      return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos + 1)\n  }\n\n  parseRule() {\n    // Experimental kludge to allow opt-in re-parsing of nodes\n    if (this.node.type.spec.reparseInView) return null\n    // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n    let rule = {node: this.node.type.name, attrs: this.node.attrs}\n    if (this.node.type.spec.code) rule.preserveWhitespace = \"full\"\n    if (this.contentDOM && !this.contentLost) rule.contentElement = this.contentDOM\n    else rule.getContent = () => this.contentDOM ? Fragment.empty : this.node.content\n    return rule\n  }\n\n  matchesNode(node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n      sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco)\n  }\n\n  get size() { return this.node.nodeSize }\n\n  get border() { return this.node.isLeaf ? 0 : 1 }\n\n  // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n  updateChildren(view, pos) {\n    let inline = this.node.inlineContent, off = pos\n    let composition = inline && view.composing && this.localCompositionNode(view, pos)\n    let updater = new ViewTreeUpdater(this, composition && composition.node)\n    iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n      if (widget.spec.marks)\n        updater.syncToMarks(widget.spec.marks, inline, view)\n      else if (widget.type.side >= 0 && !insideNode)\n        updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view)\n      // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n      updater.placeWidget(widget, view, off)\n    }, (child, outerDeco, innerDeco, i) => {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view)\n      // Either find an existing desc that exactly matches this node,\n      // and drop the descs before it.\n      updater.findNodeMatch(child, outerDeco, innerDeco, i) ||\n        // Or try updating the next desc to reflect this node.\n        updater.updateNextNode(child, outerDeco, innerDeco, view, i) ||\n        // Or just add it as a new desc.\n        updater.addNode(child, outerDeco, innerDeco, view, off)\n      off += child.nodeSize\n    })\n    // Drop all remaining descs after the current position.\n    updater.syncToMarks(nothing, inline, view)\n    if (this.node.isTextblock) updater.addTextblockHacks()\n    updater.destroyRest()\n\n    // Sync the DOM if anything changed\n    if (updater.changed || this.dirty == CONTENT_DIRTY) {\n      // May have to protect focused DOM from being changed if a composition is active\n      if (composition) this.protectLocalComposition(view, composition)\n      renderDescs(this.contentDOM, this.children, view)\n      if (browser.ios) iosHacks(this.dom)\n    }\n  }\n\n  localCompositionNode(view, pos) {\n    // Only do something if both the selection and a focused text node\n    // are inside of this node, and the node isn't already part of a\n    // view that's a child of this view\n    let {from, to} = view.state.selection\n    if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size) return\n    let sel = view.root.getSelection()\n    let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset)\n    if (!textNode || !this.dom.contains(textNode.parentNode)) return\n\n    // Find the text in the focused node in the node, stop if it's not\n    // there (may have been modified through other means, in which\n    // case it should overwritten)\n    let text = textNode.nodeValue\n    let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos)\n\n    return textPos < 0 ? null : {node: textNode, pos: textPos, text}\n  }\n\n  protectLocalComposition(view, {node, pos, text}) {\n    // The node is already part of a local view desc, leave it there\n    if (this.getDesc(node)) return\n\n    // Create a composition view for the orphaned nodes\n    let topNode = node\n    for (;; topNode = topNode.parentNode) {\n      if (topNode.parentNode == this.contentDOM) break\n      while (topNode.previousSibling) topNode.parentNode.removeChild(topNode.previousSibling)\n      while (topNode.nextSibling) topNode.parentNode.removeChild(topNode.nextSibling)\n      if (topNode.pmViewDesc) topNode.pmViewDesc = null\n    }\n    let desc = new CompositionViewDesc(this, topNode, node, text)\n    view.compositionNodes.push(desc)\n\n    // Patch up this.children to contain the composition view\n    this.children = replaceNodes(this.children, pos, pos + text.length, view, desc)\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView) \u2192 bool\n  // If this desc be updated to match the given node decoration,\n  // do so and return true.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY ||\n        !node.sameMarkup(this.node)) return false\n    this.updateInner(node, outerDeco, innerDeco, view)\n    return true\n  }\n\n  updateInner(node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco)\n    this.node = node\n    this.innerDeco = innerDeco\n    if (this.contentDOM) this.updateChildren(view, this.posAtStart)\n    this.dirty = NOT_DIRTY\n  }\n\n  updateOuterDeco(outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) return\n    let needsWrap = this.nodeDOM.nodeType != 1\n    let oldDOM = this.dom\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM,\n                              computeOuterDeco(this.outerDeco, this.node, needsWrap),\n                              computeOuterDeco(outerDeco, this.node, needsWrap))\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = null\n      this.dom.pmViewDesc = this\n    }\n    this.outerDeco = outerDeco\n  }\n\n  // Mark this node as being the selected node.\n  selectNode() {\n    this.nodeDOM.classList.add(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.draggable = true\n  }\n\n  // Remove selected node marking from this node.\n  deselectNode() {\n    this.nodeDOM.classList.remove(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.removeAttribute(\"draggable\")\n  }\n\n  get domAtom() { return this.node.isAtom }\n}\n\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nexport function docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc)\n  return new NodeViewDesc(null, doc, outerDeco, innerDeco, dom, dom, dom, view, 0)\n}\n\nclass TextViewDesc extends NodeViewDesc {\n  constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view)\n  }\n\n  parseRule() {\n    let skip = this.nodeDOM.parentNode\n    while (skip && skip != this.dom && !skip.pmIsDeco) skip = skip.parentNode\n    return {skip: skip || true}\n  }\n\n  update(node, outerDeco, _, view) {\n    if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n        !node.sameMarkup(this.node)) return false\n    this.updateOuterDeco(outerDeco)\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n      this.nodeDOM.nodeValue = node.text\n      if (view.trackWrites == this.nodeDOM) view.trackWrites = null\n    }\n    this.node = node\n    this.dirty = NOT_DIRTY\n    return true\n  }\n\n  inParent() {\n    let parentDOM = this.parent.contentDOM\n    for (let n = this.nodeDOM; n; n = n.parentNode) if (n == parentDOM) return true\n    return false\n  }\n\n  domFromPos(pos) {\n    return {node: this.nodeDOM, offset: pos}\n  }\n\n  localPosFromDOM(dom, offset, bias) {\n    if (dom == this.nodeDOM) return this.posAtStart + Math.min(offset, this.node.text.length)\n    return super.localPosFromDOM(dom, offset, bias)\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"characterData\" && mutation.type != \"selection\"\n  }\n\n  slice(from, to, view) {\n    let node = this.node.cut(from, to), dom = document.createTextNode(node.text)\n    return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view)\n  }\n\n  get domAtom() { return false }\n}\n\n// A dummy desc used to tag trailing BR or span nodes created to work\n// around contentEditable terribleness.\nclass BRHackViewDesc extends ViewDesc {\n  parseRule() { return {ignore: true} }\n  matchesHack() { return this.dirty == NOT_DIRTY }\n  get domAtom() { return true }\n}\n\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSource, dom.Node, ?dom.Node, NodeView, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n    super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos)\n    this.spec = spec\n  }\n\n  // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) return false\n    if (this.spec.update) {\n      let result = this.spec.update(node, outerDeco, innerDeco)\n      if (result) this.updateInner(node, outerDeco, innerDeco, view)\n      return result\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false\n    } else {\n      return super.update(node, outerDeco, innerDeco, view)\n    }\n  }\n\n  selectNode() {\n    this.spec.selectNode ? this.spec.selectNode() : super.selectNode()\n  }\n\n  deselectNode() {\n    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode()\n  }\n\n  setSelection(anchor, head, root, force) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n      : super.setSelection(anchor, head, root, force)\n  }\n\n  destroy() {\n    if (this.spec.destroy) this.spec.destroy()\n    super.destroy()\n  }\n\n  stopEvent(event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation)\n  }\n}\n\n// : (dom.Node, [ViewDesc])\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n  let dom = parentDOM.firstChild, written = false\n  for (let i = 0; i < descs.length; i++) {\n    let desc = descs[i], childDOM = desc.dom\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) { dom = rm(dom); written = true }\n      dom = dom.nextSibling\n    } else {\n      written = true\n      parentDOM.insertBefore(childDOM, dom)\n    }\n    if (desc instanceof MarkViewDesc) {\n      let pos = dom ? dom.previousSibling : parentDOM.lastChild\n      renderDescs(desc.contentDOM, desc.children, view)\n      dom = pos ? pos.nextSibling : parentDOM.firstChild\n    }\n  }\n  while (dom) { dom = rm(dom); written = true }\n  if (written && view.trackWrites == parentDOM) view.trackWrites = null\n}\n\nfunction OuterDecoLevel(nodeName) {\n  if (nodeName) this.nodeName = nodeName\n}\nOuterDecoLevel.prototype = Object.create(null)\n\nconst noDeco = [new OuterDecoLevel]\n\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) return noDeco\n\n  let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top]\n\n  for (let i = 0; i < outerDeco.length; i++) {\n    let attrs = outerDeco[i].type.attrs\n    if (!attrs) continue\n    if (attrs.nodeName)\n      result.push(top = new OuterDecoLevel(attrs.nodeName))\n\n    for (let name in attrs) {\n      let val = attrs[name]\n      if (val == null) continue\n      if (needsWrap && result.length == 1)\n        result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"))\n      if (name == \"class\") top.class = (top.class ? top.class + \" \" : \"\") + val\n      else if (name == \"style\") top.style = (top.style ? top.style + \";\" : \"\") + val\n      else if (name != \"nodeName\") top[name] = val\n    }\n  }\n\n  return result\n}\n\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) return nodeDOM\n\n  let curDOM = nodeDOM\n  for (let i = 0; i < curComputed.length; i++) {\n    let deco = curComputed[i], prev = prevComputed[i]\n    if (i) {\n      let parent\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n          (parent = curDOM.parentNode) && parent.tagName.toLowerCase() == deco.nodeName) {\n        curDOM = parent\n      } else {\n        parent = document.createElement(deco.nodeName)\n        parent.pmIsDeco = true\n        parent.appendChild(curDOM)\n        prev = noDeco[0]\n        curDOM = parent\n      }\n    }\n    patchAttributes(curDOM, prev || noDeco[0], deco)\n  }\n  return curDOM\n}\n\nfunction patchAttributes(dom, prev, cur) {\n  for (let name in prev)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n      dom.removeAttribute(name)\n  for (let name in cur)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n      dom.setAttribute(name, cur[name])\n  if (prev.class != cur.class) {\n    let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : nothing\n    let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : nothing\n    for (let i = 0; i < prevList.length; i++) if (curList.indexOf(prevList[i]) == -1)\n      dom.classList.remove(prevList[i])\n    for (let i = 0; i < curList.length; i++) if (prevList.indexOf(curList[i]) == -1)\n      dom.classList.add(curList[i])\n  }\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m\n      while (m = prop.exec(prev.style))\n        dom.style.removeProperty(m[1])\n    }\n    if (cur.style)\n      dom.style.cssText += cur.style\n  }\n}\n\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1))\n}\n\n// : ([Decoration], [Decoration]) \u2192 bool\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) return false\n  for (let i = 0; i < a.length; i++) if (!a[i].type.eq(b[i].type)) return false\n  return true\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n  let next = dom.nextSibling\n  dom.parentNode.removeChild(dom)\n  return next\n}\n\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n  // : (NodeViewDesc)\n  constructor(top, lockedNode) {\n    this.top = top\n    this.lock = lockedNode\n    // Index into `this.top`'s child array, represents the current\n    // update position.\n    this.index = 0\n    // When entering a mark, the current top and index are pushed\n    // onto this.\n    this.stack = []\n    // Tracks whether anything was changed\n    this.changed = false\n\n    this.preMatch = preMatch(top.node.content, top.children)\n  }\n\n  // Destroy and remove the children between the given indices in\n  // `this.top`.\n  destroyBetween(start, end) {\n    if (start == end) return\n    for (let i = start; i < end; i++) this.top.children[i].destroy()\n    this.top.children.splice(start, end - start)\n    this.changed = true\n  }\n\n  // Destroy all remaining children in `this.top`.\n  destroyRest() {\n    this.destroyBetween(this.index, this.top.children.length)\n  }\n\n  // : ([Mark], EditorView)\n  // Sync the current stack of mark descs with the given array of\n  // marks, reusing existing mark descs when possible.\n  syncToMarks(marks, inline, view) {\n    let keep = 0, depth = this.stack.length >> 1\n    let maxKeep = Math.min(depth, marks.length)\n    while (keep < maxKeep &&\n           (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1]).matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n      keep++\n\n    while (keep < depth) {\n      this.destroyRest()\n      this.top.dirty = NOT_DIRTY\n      this.index = this.stack.pop()\n      this.top = this.stack.pop()\n      depth--\n    }\n    while (depth < marks.length) {\n      this.stack.push(this.top, this.index + 1)\n      let found = -1\n      for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n        if (this.top.children[i].matchesMark(marks[depth])) { found = i; break }\n      }\n      if (found > -1) {\n        if (found > this.index) {\n          this.changed = true\n          this.destroyBetween(this.index, found)\n        }\n        this.top = this.top.children[this.index]\n      } else {\n        let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view)\n        this.top.children.splice(this.index, 0, markDesc)\n        this.top = markDesc\n        this.changed = true\n      }\n      this.index = 0\n      depth++\n    }\n  }\n\n  // : (Node, [Decoration], DecorationSource) \u2192 bool\n  // Try to find a node desc matching the given data. Skip over it and\n  // return true when successful.\n  findNodeMatch(node, outerDeco, innerDeco, index) {\n    let children = this.top.children, found = -1\n    if (index >= this.preMatch.index) {\n      for (let i = this.index; i < children.length; i++) if (children[i].matchesNode(node, outerDeco, innerDeco)) {\n        found = i\n        break\n      }\n    } else {\n      for (let i = this.index, e = Math.min(children.length, i + 1); i < e; i++) {\n        let child = children[i]\n        if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n          found = i\n          break\n        }\n      }\n    }\n    if (found < 0) return false\n    this.destroyBetween(this.index, found)\n    this.index++\n    return true\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView, Fragment, number) \u2192 bool\n  // Try to update the next node, if any, to the given data. Checks\n  // pre-matches to avoid overwriting nodes that could still be used.\n  updateNextNode(node, outerDeco, innerDeco, view, index) {\n    for (let i = this.index; i < this.top.children.length; i++) {\n      let next = this.top.children[i]\n      if (next instanceof NodeViewDesc) {\n        let preMatch = this.preMatch.matched.get(next)\n        if (preMatch != null && preMatch != index) return false\n        let nextDOM = next.dom\n\n        // Can't update if nextDOM is or contains this.lock, except if\n        // it's a text node whose content already matches the new text\n        // and whose decorations match the new ones.\n        let locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) &&\n            !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n              next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco))\n        if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n          this.destroyBetween(this.index, i)\n          if (next.dom != nextDOM) this.changed = true\n          this.index++\n          return true\n        }\n        break\n      }\n    }\n    return false\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView)\n  // Insert the node as a newly created node desc.\n  addNode(node, outerDeco, innerDeco, view, pos) {\n    this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos))\n    this.changed = true\n  }\n\n  placeWidget(widget, view, pos) {\n    let next = this.index < this.top.children.length ? this.top.children[this.index] : null\n    if (next && next.matchesWidget(widget) && (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n      this.index++\n    } else {\n      let desc = new WidgetViewDesc(this.top, widget, view, pos)\n      this.top.children.splice(this.index++, 0, desc)\n      this.changed = true\n    }\n  }\n\n  // Make sure a textblock looks and behaves correctly in\n  // contentEditable.\n  addTextblockHacks() {\n    let lastChild = this.top.children[this.index - 1]\n    while (lastChild instanceof MarkViewDesc) lastChild = lastChild.children[lastChild.children.length - 1]\n\n    if (!lastChild || // Empty textblock\n        !(lastChild instanceof TextViewDesc) ||\n        /\\n$/.test(lastChild.node.text)) {\n      if (this.index < this.top.children.length && this.top.children[this.index].matchesHack()) {\n        this.index++\n      } else {\n        let dom = document.createElement(\"br\")\n        this.top.children.splice(this.index++, 0, new BRHackViewDesc(this.top, nothing, dom, null))\n        this.changed = true\n      }\n    }\n  }\n}\n\n// : (Fragment, [ViewDesc]) \u2192 {index: number, matched: Map<ViewDesc, number>}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, descs) {\n  let fI = frag.childCount, dI = descs.length, matched = new Map\n  for (; fI > 0 && dI > 0; dI--) {\n    let desc = descs[dI - 1], node = desc.node\n    if (!node) continue\n    if (node != frag.child(fI - 1)) break\n    --fI\n    matched.set(desc, fI)\n  }\n  return {index: fI, matched}\n}\n\nfunction compareSide(a, b) { return a.type.side - b.type.side }\n\n// : (ViewDesc, DecorationSource, (Decoration, number), (Node, [Decoration], DecorationSource, number))\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  let locals = deco.locals(parent), offset = 0\n  // Simple, cheap variant for when there are no local decorations\n  if (locals.length == 0) {\n    for (let i = 0; i < parent.childCount; i++) {\n      let child = parent.child(i)\n      onNode(child, locals, deco.forChild(offset, child), i)\n      offset += child.nodeSize\n    }\n    return\n  }\n\n  let decoIndex = 0, active = [], restNode = null\n  for (let parentIndex = 0;;) {\n    if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      let widget = locals[decoIndex++], widgets\n      while (decoIndex < locals.length && locals[decoIndex].to == offset)\n        (widgets || (widgets = [widget])).push(locals[decoIndex++])\n      if (widgets) {\n        widgets.sort(compareSide)\n        for (let i = 0; i < widgets.length; i++) onWidget(widgets[i], parentIndex, !!restNode)\n      } else {\n        onWidget(widget, parentIndex, !!restNode)\n      }\n    }\n\n    let child, index\n    if (restNode) {\n      index = -1\n      child = restNode\n      restNode = null\n    } else if (parentIndex < parent.childCount) {\n      index = parentIndex\n      child = parent.child(parentIndex++)\n    } else {\n      break\n    }\n\n    for (let i = 0; i < active.length; i++) if (active[i].to <= offset) active.splice(i--, 1)\n    while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n      active.push(locals[decoIndex++])\n\n    let end = offset + child.nodeSize\n    if (child.isText) {\n      let cutAt = end\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) cutAt = locals[decoIndex].from\n      for (let i = 0; i < active.length; i++) if (active[i].to < cutAt) cutAt = active[i].to\n      if (cutAt < end) {\n        restNode = child.cut(cutAt - offset)\n        child = child.cut(0, cutAt - offset)\n        end = cutAt\n        index = -1\n      }\n    }\n\n    let outerDeco = !active.length ? nothing\n        : child.isInline && !child.isLeaf ? active.filter(d => !d.inline)\n        : active.slice()\n    onNode(child, outerDeco, deco.forChild(offset, child), index)\n    offset = end\n  }\n}\n\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    let oldCSS = dom.style.cssText\n    dom.style.cssText = oldCSS + \"; list-style: square !important\"\n    window.getComputedStyle(dom).listStyle\n    dom.style.cssText = oldCSS\n  }\n}\n\nfunction nearbyTextNode(node, offset) {\n  for (;;) {\n    if (node.nodeType == 3) return node\n    if (node.nodeType == 1 && offset > 0) {\n      if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n        return node.childNodes[offset]\n      node = node.childNodes[offset - 1]\n      offset = nodeSize(node)\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset]\n      offset = 0\n    } else {\n      return null\n    }\n  }\n}\n\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n  for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n    let child = frag.child(i++), childStart = pos\n    pos += child.nodeSize\n    if (!child.isText) continue\n    let str = child.text\n    while (i < frag.childCount) {\n      let next = frag.child(i++)\n      pos += next.nodeSize\n      if (!next.isText) break\n      str += next.text\n    }\n    if (pos >= from) {\n      let found = str.lastIndexOf(text, to - childStart)\n      if (found >= 0 && found + text.length + childStart >= from)\n        return childStart + found\n    }\n  }\n  return -1\n}\n\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n  let result = []\n  for (let i = 0, off = 0; i < nodes.length; i++) {\n    let child = nodes[i], start = off, end = off += child.size\n    if (start >= to || end <= from) {\n      result.push(child)\n    } else {\n      if (start < from) result.push(child.slice(0, from - start, view))\n      if (replacement) {\n        result.push(replacement)\n        replacement = null\n      }\n      if (end > to) result.push(child.slice(to - start, child.size, view))\n    }\n  }\n  return result\n}\n", "import {TextSelection, NodeSelection} from \"prosemirror-state\"\n\nimport browser from \"./browser\"\nimport {selectionCollapsed, isEquivalentPosition, domIndex, isOnEdge} from \"./dom\"\n\nexport function selectionFromDOM(view, origin) {\n  let domSel = view.root.getSelection(), doc = view.state.doc\n  if (!domSel.focusNode) return null\n  let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0\n  let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset)\n  if (head < 0) return null\n  let $head = doc.resolve(head), $anchor, selection\n  if (selectionCollapsed(domSel)) {\n    $anchor = $head\n    while (nearestDesc && !nearestDesc.node) nearestDesc = nearestDesc.parent\n    if (nearestDesc && nearestDesc.node.isAtom && NodeSelection.isSelectable(nearestDesc.node) && nearestDesc.parent\n        && !(nearestDesc.node.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n      let pos = nearestDesc.posBefore\n      selection = new NodeSelection(head == pos ? $head : doc.resolve(pos))\n    }\n  } else {\n    let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset)\n    if (anchor < 0) return null\n    $anchor = doc.resolve(anchor)\n  }\n\n  if (!selection) {\n    let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1\n    selection = selectionBetween(view, $anchor, $head, bias)\n  }\n  return selection\n}\n\nfunction editorOwnsSelection(view) {\n  return view.editable ? view.hasFocus() :\n    hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom)\n}\n\nexport function selectionToDOM(view, force) {\n  let sel = view.state.selection\n  syncNodeSelection(view, sel)\n\n  if (!editorOwnsSelection(view)) return\n\n  view.domObserver.disconnectSelection()\n\n  if (view.cursorWrapper) {\n    selectCursorWrapper(view)\n  } else {\n    let {anchor, head} = sel, resetEditableFrom, resetEditableTo\n    if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n      if (!sel.$from.parent.inlineContent)\n        resetEditableFrom = temporarilyEditableNear(view, sel.from)\n      if (!sel.empty && !sel.$from.parent.inlineContent)\n        resetEditableTo = temporarilyEditableNear(view, sel.to)\n    }\n    view.docView.setSelection(anchor, head, view.root, force)\n    if (brokenSelectBetweenUneditable) {\n      if (resetEditableFrom) resetEditable(resetEditableFrom)\n      if (resetEditableTo) resetEditable(resetEditableTo)\n    }\n    if (sel.visible) {\n      view.dom.classList.remove(\"ProseMirror-hideselection\")\n    } else {\n      view.dom.classList.add(\"ProseMirror-hideselection\")\n      if (\"onselectionchange\" in document) removeClassOnSelectionChange(view)\n    }\n  }\n\n  view.domObserver.setCurSelection()\n  view.domObserver.connectSelection()\n}\n\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\n\nconst brokenSelectBetweenUneditable = browser.safari || browser.chrome && browser.chrome_version < 63\n\nfunction temporarilyEditableNear(view, pos) {\n  let {node, offset} = view.docView.domFromPos(pos, 0)\n  let after = offset < node.childNodes.length ? node.childNodes[offset] : null\n  let before = offset ? node.childNodes[offset - 1] : null\n  if (browser.safari && after && after.contentEditable == \"false\") return setEditable(after)\n  if ((!after || after.contentEditable == \"false\") && (!before || before.contentEditable == \"false\")) {\n    if (after) return setEditable(after)\n    else if (before) return setEditable(before)\n  }\n}\n\nfunction setEditable(element) {\n  element.contentEditable = \"true\"\n  if (browser.safari && element.draggable) { element.draggable = false; element.wasDraggable = true }\n  return element\n}\n\nfunction resetEditable(element) {\n  element.contentEditable = \"false\"\n  if (element.wasDraggable) { element.draggable = true; element.wasDraggable = null }\n}\n\nfunction removeClassOnSelectionChange(view) {\n  let doc = view.dom.ownerDocument\n  doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard)\n  let domSel = view.root.getSelection()\n  let node = domSel.anchorNode, offset = domSel.anchorOffset\n  doc.addEventListener(\"selectionchange\", view.hideSelectionGuard = () => {\n    if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n      doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard)\n      setTimeout(() => {\n        if (!editorOwnsSelection(view) || view.state.selection.visible)\n          view.dom.classList.remove(\"ProseMirror-hideselection\")\n      }, 20)\n    }\n  })\n}\n\nfunction selectCursorWrapper(view) {\n  let domSel = view.root.getSelection(), range = document.createRange()\n  let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\"\n  if (img) range.setEnd(node.parentNode, domIndex(node) + 1)\n  else range.setEnd(node, 0)\n  range.collapse(false)\n  domSel.removeAllRanges()\n  domSel.addRange(range)\n  // Kludge to kill 'control selection' in IE11 when selecting an\n  // invisible cursor wrapper, since that would result in those weird\n  // resize handles and a selection that considers the absolutely\n  // positioned wrapper, rather than the root editable node, the\n  // focused element.\n  if (!img && !view.state.selection.visible && browser.ie && browser.ie_version <= 11) {\n    node.disabled = true\n    node.disabled = false\n  }\n}\n\nexport function syncNodeSelection(view, sel) {\n  if (sel instanceof NodeSelection) {\n    let desc = view.docView.descAt(sel.from)\n    if (desc != view.lastSelectedViewDesc) {\n      clearNodeSelection(view)\n      if (desc) desc.selectNode()\n      view.lastSelectedViewDesc = desc\n    }\n  } else {\n    clearNodeSelection(view)\n  }\n}\n\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n  if (view.lastSelectedViewDesc) {\n    if (view.lastSelectedViewDesc.parent)\n      view.lastSelectedViewDesc.deselectNode()\n    view.lastSelectedViewDesc = null\n  }\n}\n\nexport function selectionBetween(view, $anchor, $head, bias) {\n  return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n    || TextSelection.between($anchor, $head, bias)\n}\n\nexport function hasFocusAndSelection(view) {\n  if (view.editable && view.root.activeElement != view.dom) return false\n  return hasSelection(view)\n}\n\nexport function hasSelection(view) {\n  let sel = view.root.getSelection()\n  if (!sel.anchorNode) return false\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n      (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode))\n  } catch(_) {\n    return false\n  }\n}\n\nexport function anchorInRightPlace(view) {\n  let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0)\n  let domSel = view.root.getSelection()\n  return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset)\n}\n", "import {Selection, NodeSelection, TextSelection, AllSelection} from \"prosemirror-state\"\nimport browser from \"./browser\"\nimport {domIndex, selectionCollapsed} from \"./dom\"\nimport {selectionToDOM} from \"./selection\"\n\nfunction moveSelectionBlock(state, dir) {\n  let {$anchor, $head} = state.selection\n  let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head)\n  let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null\n  return $start && Selection.findFrom($start, dir)\n}\n\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView())\n  return true\n}\n\nfunction selectHorizontally(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection) {\n    if (!sel.empty || mods.indexOf(\"s\") > -1) {\n      return false\n    } else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n      let next = moveSelectionBlock(view.state, dir)\n      if (next && (next instanceof NodeSelection)) return apply(view, next)\n      return false\n    } else if (!(browser.mac && mods.indexOf(\"m\") > -1)) {\n      let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc\n      if (!node || node.isText) return false\n      let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos\n      if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM)) return false\n      if (NodeSelection.isSelectable(node)) {\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head))\n      } else if (browser.webkit) {\n        // Chrome and Safari will introduce extra pointless cursor\n        // positions around inline uneditable nodes, so we have to\n        // take over and move the cursor past them (#937)\n        return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)))\n      } else {\n        return false\n      }\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from))\n  } else {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next) return apply(view, next)\n    return false\n  }\n}\n\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isIgnorable(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\")\n}\n\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let moveNode, moveOffset, force = false\n  // Gecko will do odd things when the selection is directly in front\n  // of a non-editable node, so in that case, move it into the next\n  // node if possible. Issue prosemirror/prosemirror#832.\n  if (browser.gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset])) force = true\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        break\n      } else {\n        let before = node.childNodes[offset - 1]\n        if (isIgnorable(before)) {\n          moveNode = node\n          moveOffset = --offset\n        } else if (before.nodeType == 3) {\n          node = before\n          offset = node.nodeValue.length\n        } else break\n      }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let prev = node.previousSibling\n      while (prev && isIgnorable(prev)) {\n        moveNode = node.parentNode\n        moveOffset = domIndex(prev)\n        prev = prev.previousSibling\n      }\n      if (!prev) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = 0\n      } else {\n        node = prev\n        offset = nodeLen(node)\n      }\n    }\n  }\n  if (force) setSelFocus(view, sel, node, offset)\n  else if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let len = nodeLen(node)\n  let moveNode, moveOffset\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) break\n      let after = node.childNodes[offset]\n      if (isIgnorable(after)) {\n        moveNode = node\n        moveOffset = ++offset\n      }\n      else break\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let next = node.nextSibling\n      while (next && isIgnorable(next)) {\n        moveNode = next.parentNode\n        moveOffset = domIndex(next) + 1\n        next = next.nextSibling\n      }\n      if (!next) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = len = 0\n      } else {\n        node = next\n        offset = 0\n        len = nodeLen(node)\n      }\n    }\n  }\n  if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\nfunction isBlockNode(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.node && desc.node.isBlock\n}\n\nfunction setSelFocus(view, sel, node, offset) {\n  if (selectionCollapsed(sel)) {\n    let range = document.createRange()\n    range.setEnd(node, offset)\n    range.setStart(node, offset)\n    sel.removeAllRanges()\n    sel.addRange(range)\n  } else if (sel.extend) {\n    sel.extend(node, offset)\n  }\n  view.domObserver.setCurSelection()\n  let {state} = view\n  // If no state update ends up happening, reset the selection.\n  setTimeout(() => {\n    if (view.state == state) selectionToDOM(view)\n  }, 50)\n}\n\n// : (EditorState, number)\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1) return false\n  if (browser.mac && mods.indexOf(\"m\") > -1) return false\n  let {$from, $to} = sel\n\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next && (next instanceof NodeSelection))\n      return apply(view, next)\n  }\n  if (!$from.parent.inlineContent) {\n    let side = dir < 0 ? $from : $to\n    let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir)\n    return beyond ? apply(view, beyond) : false\n  }\n  return false\n}\n\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) return true\n  let {$head, $anchor, empty} = view.state.selection\n  if (!$head.sameParent($anchor)) return true\n  if (!empty) return false\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) return true\n  let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter)\n  if (nextNode && !nextNode.isText) {\n    let tr = view.state.tr\n    if (dir < 0) tr.delete($head.pos - nextNode.nodeSize, $head.pos)\n    else tr.delete($head.pos, $head.pos + nextNode.nodeSize)\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\nfunction switchEditable(view, node, state) {\n  view.domObserver.stop()\n  node.contentEditable = state\n  view.domObserver.start()\n}\n\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n  if (!browser.safari || view.state.selection.$head.parentOffset > 0) return\n  let {focusNode, focusOffset} = view.root.getSelection()\n  if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n      focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n    let child = focusNode.firstChild\n    switchEditable(view, child, true)\n    setTimeout(() => switchEditable(view, child, false), 20)\n  }\n}\n\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\n\nfunction getMods(event) {\n  let result = \"\"\n  if (event.ctrlKey) result += \"c\"\n  if (event.metaKey) result += \"m\"\n  if (event.altKey) result += \"a\"\n  if (event.shiftKey) result += \"s\"\n  return result\n}\n\nexport function captureKeyDown(view, event) {\n  let code = event.keyCode, mods = getMods(event)\n  if (code == 8 || (browser.mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 46 || (browser.mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view)\n  } else if (code == 13 || code == 27) { // Enter, Esc\n    return true\n  } else if (code == 37) { // Left arrow\n    return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 39) { // Right arrow\n    return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (code == 38) { // Up arrow\n    return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 40) { // Down arrow\n    return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (mods == (browser.mac ? \"m\" : \"c\") &&\n             (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n    return true\n  }\n  return false\n}\n", "import {Fragment, DOMParser} from \"prosemirror-model\"\nimport {Selection, TextSelection} from \"prosemirror-state\"\n\nimport {selectionBetween, selectionFromDOM, selectionToDOM} from \"./selection\"\nimport {selectionCollapsed, keyEvent} from \"./dom\"\nimport browser from \"./browser\"\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\n\nfunction parseBetween(view, from_, to_) {\n  let {node: parent, fromOffset, toOffset, from, to} = view.docView.parseRange(from_, to_)\n\n  let domSel = view.root.getSelection(), find = null, anchor = domSel.anchorNode\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{node: anchor, offset: domSel.anchorOffset}]\n    if (!selectionCollapsed(domSel))\n      find.push({node: domSel.focusNode, offset: domSel.focusOffset})\n  }\n  // Work around issue in Chrome where backspacing sometimes replaces\n  // the deleted content with a random BR node (issues #799, #831)\n  if (browser.chrome && view.lastKeyCode === 8) {\n    for (let off = toOffset; off > fromOffset; off--) {\n      let node = parent.childNodes[off - 1], desc = node.pmViewDesc\n      if (node.nodeName == \"BR\" && !desc) { toOffset = off; break }\n      if (!desc || desc.size) break\n    }\n  }\n  let startDoc = view.state.doc\n  let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n  let $from = startDoc.resolve(from)\n\n  let sel = null, doc = parser.parse(parent, {\n    topNode: $from.parent,\n    topMatch: $from.parent.contentMatchAt($from.index()),\n    topOpen: true,\n    from: fromOffset,\n    to: toOffset,\n    preserveWhitespace: $from.parent.type.spec.code ? \"full\" : true,\n    editableContent: true,\n    findPositions: find,\n    ruleFromNode,\n    context: $from\n  })\n  if (find && find[0].pos != null) {\n    let anchor = find[0].pos, head = find[1] && find[1].pos\n    if (head == null) head = anchor\n    sel = {anchor: anchor + from, head: head + from}\n  }\n  return {doc, sel, from, to}\n}\n\nfunction ruleFromNode(dom) {\n  let desc = dom.pmViewDesc\n  if (desc) {\n    return desc.parseRule()\n  } else if (dom.nodeName == \"BR\" && dom.parentNode) {\n    // Safari replaces the list item or table cell with a BR\n    // directly in the list node (?!) if you delete the last\n    // character in a list item or table cell (#708, #862)\n    if (browser.safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n      let skip = document.createElement(\"div\")\n      skip.appendChild(document.createElement(\"li\"))\n      return {skip}\n    } else if (dom.parentNode.lastChild == dom || browser.safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n      return {ignore: true}\n    }\n  } else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n    return {ignore: true}\n  }\n}\n\nexport function readDOMChange(view, from, to, typeOver, addedNodes) {\n  if (from < 0) {\n    let origin = view.lastSelectionTime > Date.now() - 50 ? view.lastSelectionOrigin : null\n    let newSel = selectionFromDOM(view, origin)\n    if (newSel && !view.state.selection.eq(newSel)) {\n      let tr = view.state.tr.setSelection(newSel)\n      if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n      else if (origin == \"key\") tr.scrollIntoView()\n      view.dispatch(tr)\n    }\n    return\n  }\n\n  let $before = view.state.doc.resolve(from)\n  let shared = $before.sharedDepth(to)\n  from = $before.before(shared + 1)\n  to = view.state.doc.resolve(to).after(shared + 1)\n\n  let sel = view.state.selection\n  let parse = parseBetween(view, from, to)\n  // Chrome sometimes leaves the cursor before the inserted text when\n  // composing after a cursor wrapper. This moves it forward.\n  if (browser.chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from) {\n    let text = view.cursorWrapper.deco.type.toDOM.nextSibling\n    let size = text && text.nodeValue ? text.nodeValue.length : 1\n    parse.sel = {anchor: parse.sel.anchor + size, head: parse.sel.anchor + size}\n  }\n\n  let doc = view.state.doc, compare = doc.slice(parse.from, parse.to)\n  let preferredPos, preferredSide\n  // Prefer anchoring to end when Backspace is pressed\n  if (view.lastKeyCode === 8 && Date.now() - 100 < view.lastKeyCodeTime) {\n    preferredPos = view.state.selection.to\n    preferredSide = \"end\"\n  } else {\n    preferredPos = view.state.selection.from\n    preferredSide = \"start\"\n  }\n  view.lastKeyCode = null\n\n  let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide)\n  if (!change) {\n    if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n        !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n      change = {start: sel.from, endA: sel.to, endB: sel.to}\n    } else if ((browser.ios && view.lastIOSEnter > Date.now() - 225 || browser.android) &&\n               addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\") &&\n               view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n      view.lastIOSEnter = 0\n      return\n    } else {\n      if (parse.sel) {\n        let sel = resolveSelection(view, view.state.doc, parse.sel)\n        if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n      }\n      return\n    }\n  }\n  view.domChangeCount++\n  // Handle the case where overwriting a selection by typing matches\n  // the start or end of the selected content, creating a change\n  // that's smaller than what was actually overwritten.\n  if (view.state.selection.from < view.state.selection.to &&\n      change.start == change.endB &&\n      view.state.selection instanceof TextSelection) {\n    if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2) {\n      change.start = view.state.selection.from\n    } else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2) {\n      change.endB += (view.state.selection.to - change.endA)\n      change.endA = view.state.selection.to\n    }\n  }\n\n  // IE11 will insert a non-breaking space _ahead_ of the space after\n  // the cursor space when adding a space before another space. When\n  // that happened, adjust the change to cover the space instead.\n  if (browser.ie && browser.ie_version <= 11 && change.endB == change.start + 1 &&\n      change.endA == change.start && change.start > parse.from &&\n      parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n    change.start--\n    change.endA--\n    change.endB--\n  }\n\n  let $from = parse.doc.resolveNoCache(change.start - parse.from)\n  let $to = parse.doc.resolveNoCache(change.endB - parse.from)\n  let inlineChange = $from.sameParent($to) && $from.parent.inlineContent\n  let nextSel\n  // If this looks like the effect of pressing Enter (or was recorded\n  // as being an iOS enter press), just dispatch an Enter key instead.\n  if (((browser.ios && view.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n       (!inlineChange && $from.pos < parse.doc.content.size &&\n        (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n        nextSel.head == $to.pos)) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n    view.lastIOSEnter = 0\n    return\n  }\n  // Same for backspace\n  if (view.state.selection.anchor > change.start &&\n      looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n    if (browser.android && browser.chrome) view.domObserver.suppressSelectionUpdates() // #820\n    return\n  }\n\n  // Chrome Android will occasionally, during composition, delete the\n  // entire composition and then immediately insert it again. This is\n  // used to detect that situation.\n  if (browser.chrome && browser.android && change.toB == change.from)\n    view.lastAndroidDelete = Date.now()\n\n  // This tries to detect Android virtual keyboard\n  // enter-and-pick-suggestion action. That sometimes (see issue\n  // #1059) first fires a DOM mutation, before moving the selection to\n  // the newly created block. And then, because ProseMirror cleans up\n  // the DOM selection, it gives up moving the selection entirely,\n  // leaving the cursor in the wrong place. When that happens, we drop\n  // the new paragraph from the initial change, and fire a simulated\n  // enter key afterwards.\n  if (browser.android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n      parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n    change.endB -= 2\n    $to = parse.doc.resolveNoCache(change.endB - parse.from)\n    setTimeout(() => {\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); })\n    }, 20)\n  }\n\n  let chFrom = change.start, chTo = change.endA\n\n  let tr, storedMarks, markChange, $from1\n  if (inlineChange) {\n    if ($from.pos == $to.pos) { // Deletion\n      // IE11 sometimes weirdly moves the DOM selection around after\n      // backspacing out the first element in a textblock\n      if (browser.ie && browser.ie_version <= 11 && $from.parentOffset == 0) {\n        view.domObserver.suppressSelectionUpdates()\n        setTimeout(() => selectionToDOM(view), 20)\n      }\n      tr = view.state.tr.delete(chFrom, chTo)\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA))\n    } else if ( // Adding or removing a mark\n      change.endA == change.endB && ($from1 = doc.resolve(change.start)) &&\n      (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset),\n                                 $from1.parent.content.cut($from1.parentOffset, change.endA - $from1.start())))\n    ) {\n      tr = view.state.tr\n      if (markChange.type == \"add\") tr.addMark(chFrom, chTo, markChange.mark)\n      else tr.removeMark(chFrom, chTo, markChange.mark)\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset)\n      if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text))) return\n      tr = view.state.tr.insertText(text, chFrom, chTo)\n    }\n  }\n\n  if (!tr)\n    tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from))\n  if (parse.sel) {\n    let sel = resolveSelection(view, tr.doc, parse.sel)\n    // Chrome Android will sometimes, during composition, report the\n    // selection in the wrong place. If it looks like that is\n    // happening, don't update the selection.\n    // Edge just doesn't move the cursor forward when you start typing\n    // in an empty block or between br nodes.\n    if (sel && !(browser.chrome && browser.android && view.composing && sel.empty &&\n                 (change.from != change.toB || view.lastAndroidDelete < Date.now() - 100) &&\n                 (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n                 browser.ie && sel.empty && sel.head == chFrom))\n      tr.setSelection(sel)\n  }\n  if (storedMarks) tr.ensureMarks(storedMarks)\n  view.dispatch(tr.scrollIntoView())\n}\n\nfunction resolveSelection(view, doc, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) return null\n  return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head))\n}\n\n// : (Fragment, Fragment) \u2192 ?{mark: Mark, type: string}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n  let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks\n  let added = curMarks, removed = prevMarks, type, mark, update\n  for (let i = 0; i < prevMarks.length; i++) added = prevMarks[i].removeFromSet(added)\n  for (let i = 0; i < curMarks.length; i++) removed = curMarks[i].removeFromSet(removed)\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0]\n    type = \"add\"\n    update = node => node.mark(mark.addToSet(node.marks))\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0]\n    type = \"remove\"\n    update = node => node.mark(mark.removeFromSet(node.marks))\n  } else {\n    return null\n  }\n  let updated = []\n  for (let i = 0; i < prev.childCount; i++) updated.push(update(prev.child(i)))\n  if (Fragment.from(updated).eq(cur)) return {mark, type}\n}\n\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock ||\n      // The content must have shrunk\n      end - start <= $newEnd.pos - $newStart.pos ||\n      // newEnd must point directly at or after the end of the block that newStart points into\n      skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n    return false\n\n  let $start = old.resolve(start)\n  // Start must be at the end of a block\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n    return false\n  let $next = old.resolve(skipClosingAndOpening($start, true, true))\n  // The next textblock must start before end and end near it\n  if (!$next.parent.isTextblock || $next.pos > end ||\n      skipClosingAndOpening($next, true, false) < end)\n    return false\n\n  // The fragments after the join point must match\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content)\n}\n\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--\n    end++\n    fromEnd = false\n  }\n  if (mayOpen) {\n    let next = $pos.node(depth).maybeChild($pos.indexAfter(depth))\n    while (next && !next.isLeaf) {\n      next = next.firstChild\n      end++\n    }\n  }\n  return end\n}\n\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n  let start = a.findDiffStart(b, pos)\n  if (start == null) return null\n  let {a: endA, b: endB} = a.findDiffEnd(b, pos + a.size, pos + b.size)\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, start - Math.min(endA, endB))\n    preferredPos -= endA + adjust - start\n  }\n  if (endA < start && a.size < b.size) {\n    let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0\n    start -= move\n    endB = start + (endB - endA)\n    endA = start\n  } else if (endB < start) {\n    let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0\n    start -= move\n    endA = start + (endA - endB)\n    endB = start\n  }\n  return {start, endA, endB}\n}\n", "import {Slice, Fragment, DOMParser, DOMSerializer} from \"prosemirror-model\"\n\nexport function serializeForClipboard(view, slice) {\n  let context = [], {content, openStart, openEnd} = slice\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--\n    openEnd--\n    let node = content.firstChild\n    context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null)\n    content = node.content\n  }\n\n  let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema)\n  let doc = detachedDoc(), wrap = doc.createElement(\"div\")\n  wrap.appendChild(serializer.serializeFragment(content, {document: doc}))\n\n  let firstChild = wrap.firstChild, needsWrap\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      let wrapper = doc.createElement(needsWrap[i])\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild)\n      wrap.appendChild(wrapper)\n    }\n    firstChild = wrap.firstChild\n  }\n\n  if (firstChild && firstChild.nodeType == 1)\n    firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd} ${JSON.stringify(context)}`)\n\n  let text = view.someProp(\"clipboardTextSerializer\", f => f(slice)) ||\n      slice.content.textBetween(0, slice.content.size, \"\\n\\n\")\n\n  return {dom: wrap, text}\n}\n\n// : (EditorView, string, string, ?bool, ResolvedPos) \u2192 ?Slice\n// Read a slice of content from the clipboard (or drop data).\nexport function parseFromClipboard(view, text, html, plainText, $context) {\n  let dom, inCode = $context.parent.type.spec.code, slice\n  if (!html && !text) return null\n  let asText = text && (plainText || inCode || !html)\n  if (asText) {\n    view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText) })\n    if (inCode) return new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0)\n    let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText))\n    if (parsed) {\n      slice = parsed\n    } else {\n      dom = document.createElement(\"div\")\n      text.trim().split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n        dom.appendChild(document.createElement(\"p\")).textContent = block\n      })\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", f => { html = f(html) })\n    dom = readHTML(html)\n  }\n\n  let contextNode = dom && dom.querySelector(\"[data-pm-slice]\")\n  let sliceData = contextNode && /^(\\d+) (\\d+) (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\"))\n  if (!slice) {\n    let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n    slice = parser.parseSlice(dom, {preserveWhitespace: !!(asText || sliceData), context: $context})\n  }\n  if (sliceData)\n    slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[3])\n  else // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), false)\n\n  view.someProp(\"transformPasted\", f => { slice = f(slice) })\n  return slice\n}\n\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n  if (fragment.childCount < 2) return fragment\n  for (let d = $context.depth; d >= 0; d--) {\n    let parent = $context.node(d)\n    let match = parent.contentMatchAt($context.index(d))\n    let lastWrap, result = []\n    fragment.forEach(node => {\n      if (!result) return\n      let wrap = match.findWrapping(node.type), inLast\n      if (!wrap) return result = null\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast\n      } else {\n        if (result.length) result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length)\n        let wrapped = withWrappers(node, wrap)\n        result.push(wrapped)\n        match = match.matchType(wrapped.type, wrapped.attrs)\n        lastWrap = wrap\n      }\n    })\n    if (result) return Fragment.from(result)\n  }\n  return fragment\n}\n\nfunction withWrappers(node, wrap, from = 0) {\n  for (let i = wrap.length - 1; i >= from; i--)\n    node = wrap[i].create(null, Fragment.from(node))\n  return node\n}\n\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1)\n    if (inner) return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner))\n    let match = sibling.contentMatchAt(sibling.childCount)\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n      return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))))\n  }\n}\n\nfunction closeRight(node, depth) {\n  if (depth == 0) return node\n  let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1))\n  let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true)\n  return node.copy(fragment.append(fill))\n}\n\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n  let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content\n  if (depth < to - 1) inner = closeRange(inner, side, from, to, depth + 1, openEnd)\n  if (depth >= from)\n    inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n      : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true))\n  return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner))\n}\n\nfunction closeSlice(slice, openStart, openEnd) {\n  if (openStart < slice.openStart)\n    slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd)\n  if (openEnd < slice.openEnd)\n    slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd)\n  return slice\n}\n\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n  thead: [\"table\"],\n  tbody: [\"table\"],\n  tfoot: [\"table\"],\n  caption: [\"table\"],\n  colgroup: [\"table\"],\n  col: [\"table\", \"colgroup\"],\n  tr: [\"table\", \"tbody\"],\n  td: [\"table\", \"tbody\", \"tr\"],\n  th: [\"table\", \"tbody\", \"tr\"]\n}\n\nlet _detachedDoc = null\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n}\n\nfunction readHTML(html) {\n  let metas = /^(\\s*<meta [^>]*>)*/.exec(html)\n  if (metas) html = html.slice(metas[0].length)\n  let elt = detachedDoc().createElement(\"div\")\n  let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n    html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\")\n  elt.innerHTML = html\n  if (wrap) for (let i = 0; i < wrap.length; i++) elt = elt.querySelector(wrap[i]) || elt\n  return elt\n}\n\nfunction addContext(slice, context) {\n  if (!slice.size) return slice\n  let schema = slice.content.firstChild.type.schema, array\n  try { array = JSON.parse(context) }\n  catch(e) { return slice }\n  let {content, openStart, openEnd} = slice\n  for (let i = array.length - 2; i >= 0; i -= 2) {\n    let type = schema.nodes[array[i]]\n    if (!type || type.hasRequiredAttrs()) break\n    content = Fragment.from(type.create(array[i + 1], content))\n    openStart++; openEnd++\n  }\n  return new Slice(content, openStart, openEnd)\n}\n", "import browser from \"./browser\"\nimport {domIndex, isEquivalentPosition} from \"./dom\"\nimport {hasFocusAndSelection, hasSelection, selectionToDOM} from \"./selection\"\n\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  attributes: true,\n  attributeOldValue: true,\n  subtree: true\n}\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = browser.ie && browser.ie_version <= 11\n\nclass SelectionState {\n  constructor() {\n    this.anchorNode = this.anchorOffset = this.focusNode = this.focusOffset = null\n  }\n\n  set(sel) {\n    this.anchorNode = sel.anchorNode; this.anchorOffset = sel.anchorOffset\n    this.focusNode = sel.focusNode; this.focusOffset = sel.focusOffset\n  }\n\n  eq(sel) {\n    return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n      sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset\n  }\n}\n\nexport class DOMObserver {\n  constructor(view, handleDOMChange) {\n    this.view = view\n    this.handleDOMChange = handleDOMChange\n    this.queue = []\n    this.flushingSoon = -1\n    this.observer = window.MutationObserver &&\n      new window.MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) this.queue.push(mutations[i])\n        // IE11 will sometimes (on backspacing out a single character\n        // text node after a BR node) call the observer callback\n        // before actually updating the DOM, which will cause\n        // ProseMirror to miss the change (see #930)\n        if (browser.ie && browser.ie_version <= 11 && mutations.some(\n          m => m.type == \"childList\" && m.removedNodes.length ||\n               m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n          this.flushSoon()\n        else\n          this.flush()\n      })\n    this.currentSelection = new SelectionState\n    if (useCharData) {\n      this.onCharData = e => {\n        this.queue.push({target: e.target, type: \"characterData\", oldValue: e.prevValue})\n        this.flushSoon()\n      }\n    }\n    this.onSelectionChange = this.onSelectionChange.bind(this)\n    this.suppressingSelectionUpdates = false\n  }\n\n  flushSoon() {\n    if (this.flushingSoon < 0)\n      this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush() }, 20)\n  }\n\n  forceFlush() {\n    if (this.flushingSoon > -1) {\n      window.clearTimeout(this.flushingSoon)\n      this.flushingSoon = -1\n      this.flush()\n    }\n  }\n\n  start() {\n    if (this.observer)\n      this.observer.observe(this.view.dom, observeOptions)\n    if (useCharData)\n      this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.connectSelection()\n  }\n\n  stop() {\n    if (this.observer) {\n      let take = this.observer.takeRecords()\n      if (take.length) {\n        for (let i = 0; i < take.length; i++) this.queue.push(take[i])\n        window.setTimeout(() => this.flush(), 20)\n      }\n      this.observer.disconnect()\n    }\n    if (useCharData) this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.disconnectSelection()\n  }\n\n  connectSelection() {\n    this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  disconnectSelection() {\n    this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  suppressSelectionUpdates() {\n    this.suppressingSelectionUpdates = true\n    setTimeout(() => this.suppressingSelectionUpdates = false, 50)\n  }\n\n  onSelectionChange() {\n    if (!hasFocusAndSelection(this.view)) return\n    if (this.suppressingSelectionUpdates) return selectionToDOM(this.view)\n    // Deletions on IE11 fire their events in the wrong order, giving\n    // us a selection change event before the DOM changes are\n    // reported.\n    if (browser.ie && browser.ie_version <= 11 && !this.view.state.selection.empty) {\n      let sel = this.view.root.getSelection()\n      // Selection.isCollapsed isn't reliable on IE\n      if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n        return this.flushSoon()\n    }\n    this.flush()\n  }\n\n  setCurSelection() {\n    this.currentSelection.set(this.view.root.getSelection())\n  }\n\n  ignoreSelectionChange(sel) {\n    if (sel.rangeCount == 0) return true\n    let container = sel.getRangeAt(0).commonAncestorContainer\n    let desc = this.view.docView.nearestDesc(container)\n    if (desc && desc.ignoreMutation({type: \"selection\", target: container.nodeType == 3 ? container.parentNode : container})) {\n      this.setCurSelection()\n      return true\n    }\n  }\n\n  flush() {\n    if (!this.view.docView || this.flushingSoon > -1) return\n    let mutations = this.observer ? this.observer.takeRecords() : []\n    if (this.queue.length) {\n      mutations = this.queue.concat(mutations)\n      this.queue.length = 0\n    }\n\n    let sel = this.view.root.getSelection()\n    let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasSelection(this.view) && !this.ignoreSelectionChange(sel)\n\n    let from = -1, to = -1, typeOver = false, added = []\n    if (this.view.editable) {\n      for (let i = 0; i < mutations.length; i++) {\n        let result = this.registerMutation(mutations[i], added)\n        if (result) {\n          from = from < 0 ? result.from : Math.min(result.from, from)\n          to = to < 0 ? result.to : Math.max(result.to, to)\n          if (result.typeOver) typeOver = true\n        }\n      }\n    }\n\n    if (browser.gecko && added.length > 1) {\n      let brs = added.filter(n => n.nodeName == \"BR\")\n      if (brs.length == 2) {\n        let [a, b] = brs\n        if (a.parentNode && a.parentNode.parentNode == b.parentNode) b.remove()\n        else a.remove()\n      }\n    }\n\n    if (from > -1 || newSel) {\n      if (from > -1) {\n        this.view.docView.markDirty(from, to)\n        checkCSS(this.view)\n      }\n      this.handleDOMChange(from, to, typeOver, added)\n      if (this.view.docView.dirty) this.view.updateState(this.view.state)\n      else if (!this.currentSelection.eq(sel)) selectionToDOM(this.view)\n      this.currentSelection.set(sel)\n    }\n  }\n\n  registerMutation(mut, added) {\n    // Ignore mutations inside nodes that were already noted as inserted\n    if (added.indexOf(mut.target) > -1) return null\n    let desc = this.view.docView.nearestDesc(mut.target)\n    if (mut.type == \"attributes\" &&\n        (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n         // Firefox sometimes fires spurious events for null/empty styles\n         (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n      return null\n    if (!desc || desc.ignoreMutation(mut)) return null\n\n    if (mut.type == \"childList\") {\n      for (let i = 0; i < mut.addedNodes.length; i++) added.push(mut.addedNodes[i])\n      if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n        return {from: desc.posBefore, to: desc.posAfter}\n      let prev = mut.previousSibling, next = mut.nextSibling\n      if (browser.ie && browser.ie_version <= 11 && mut.addedNodes.length) {\n        // IE11 gives us incorrect next/prev siblings for some\n        // insertions, so if there are added nodes, recompute those\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n          let {previousSibling, nextSibling} = mut.addedNodes[i]\n          if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0) prev = previousSibling\n          if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0) next = nextSibling\n        }\n      }\n      let fromOffset = prev && prev.parentNode == mut.target\n          ? domIndex(prev) + 1 : 0\n      let from = desc.localPosFromDOM(mut.target, fromOffset, -1)\n      let toOffset = next && next.parentNode == mut.target\n          ? domIndex(next) : mut.target.childNodes.length\n      let to = desc.localPosFromDOM(mut.target, toOffset, 1)\n      return {from, to}\n    } else if (mut.type == \"attributes\") {\n      return {from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border}\n    } else { // \"characterData\"\n      return {\n        from: desc.posAtStart,\n        to: desc.posAtEnd,\n        // An event was generated for a text change that didn't change\n        // any text. Mark the dom change to fall back to assuming the\n        // selection was typed over with an identical value if it can't\n        // find another change.\n        typeOver: mut.target.nodeValue == mut.oldValue\n      }\n    }\n  }\n}\n\nlet cssChecked = false\n\nfunction checkCSS(view) {\n  if (cssChecked) return\n  cssChecked = true\n  if (getComputedStyle(view.dom).whiteSpace == \"normal\")\n    console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\")\n}\n", "import {Selection, NodeSelection, TextSelection} from \"prosemirror-state\"\nimport {dropPoint} from \"prosemirror-transform\"\nimport {Slice} from \"prosemirror-model\"\n\nimport browser from \"./browser\"\nimport {captureKeyDown} from \"./capturekeys\"\nimport {readDOMChange} from \"./domchange\"\nimport {parseFromClipboard, serializeForClipboard} from \"./clipboard\"\nimport {DOMObserver} from \"./domobserver\"\nimport {selectionBetween, selectionToDOM, selectionFromDOM} from \"./selection\"\nimport {keyEvent} from \"./dom\"\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {}, editHandlers = {}\n\nexport function initInput(view) {\n  view.shiftKey = false\n  view.mouseDown = null\n  view.lastKeyCode = null\n  view.lastKeyCodeTime = 0\n  view.lastClick = {time: 0, x: 0, y: 0, type: \"\"}\n  view.lastSelectionOrigin = null\n  view.lastSelectionTime = 0\n\n  view.lastIOSEnter = 0\n  view.lastIOSEnterFallbackTimeout = null\n  view.lastAndroidDelete = 0\n\n  view.composing = false\n  view.composingTimeout = null\n  view.compositionNodes = []\n  view.compositionEndedAt = -2e8\n\n  view.domObserver = new DOMObserver(view, (from, to, typeOver, added) => readDOMChange(view, from, to, typeOver, added))\n  view.domObserver.start()\n  // Used by hacks like the beforeinput handler to check whether anything happened in the DOM\n  view.domChangeCount = 0\n\n  view.eventHandlers = Object.create(null)\n  for (let event in handlers) {\n    let handler = handlers[event]\n    view.dom.addEventListener(event, view.eventHandlers[event] = event => {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n          (view.editable || !(event.type in editHandlers)))\n        handler(view, event)\n    })\n  }\n  // On Safari, for reasons beyond my understanding, adding an input\n  // event handler makes an issue where the composition vanishes when\n  // you press enter go away.\n  if (browser.safari) view.dom.addEventListener(\"input\", () => null)\n\n  ensureListeners(view)\n}\n\nfunction setSelectionOrigin(view, origin) {\n  view.lastSelectionOrigin = origin\n  view.lastSelectionTime = Date.now()\n}\n\nexport function destroyInput(view) {\n  view.domObserver.stop()\n  for (let type in view.eventHandlers)\n    view.dom.removeEventListener(type, view.eventHandlers[type])\n  clearTimeout(view.composingTimeout)\n  clearTimeout(view.lastIOSEnterFallbackTimeout)\n}\n\nexport function ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", currentHandlers => {\n    for (let type in currentHandlers) if (!view.eventHandlers[type])\n      view.dom.addEventListener(type, view.eventHandlers[type] = event => runCustomHandler(view, event))\n  })\n}\n\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", handlers => {\n    let handler = handlers[event.type]\n    return handler ? handler(view, event) || event.defaultPrevented : false\n  })\n}\n\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) return true\n  if (event.defaultPrevented) return false\n  for (let node = event.target; node != view.dom; node = node.parentNode)\n    if (!node || node.nodeType == 11 ||\n        (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n      return false\n  return true\n}\n\nexport function dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] &&\n      (view.editable || !(event.type in editHandlers)))\n    handlers[event.type](view, event)\n}\n\neditHandlers.keydown = (view, event) => {\n  view.shiftKey = event.keyCode == 16 || event.shiftKey\n  if (inOrNearComposition(view, event)) return\n  view.domObserver.forceFlush()\n  view.lastKeyCode = event.keyCode\n  view.lastKeyCodeTime = Date.now()\n  // On iOS, if we preventDefault enter key presses, the virtual\n  // keyboard gets confused. So the hack here is to set a flag that\n  // makes the DOM change code recognize that what just happens should\n  // be replaced by whatever the Enter key handlers do.\n  if (browser.ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    let now = Date.now()\n    view.lastIOSEnter = now\n    view.lastIOSEnterFallbackTimeout = setTimeout(() => {\n      if (view.lastIOSEnter == now) {\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))\n        view.lastIOSEnter = 0\n      }\n    }, 200)\n  } else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n    event.preventDefault()\n  } else {\n    setSelectionOrigin(view, \"key\")\n  }\n}\n\neditHandlers.keyup = (view, e) => {\n  if (e.keyCode == 16) view.shiftKey = false\n}\n\neditHandlers.keypress = (view, event) => {\n  if (inOrNearComposition(view, event) || !event.charCode ||\n      event.ctrlKey && !event.altKey || browser.mac && event.metaKey) return\n\n  if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n    event.preventDefault()\n    return\n  }\n\n  let sel = view.state.selection\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    let text = String.fromCharCode(event.charCode)\n    if (!view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n      view.dispatch(view.state.tr.insertText(text).scrollIntoView())\n    event.preventDefault()\n  }\n}\n\nfunction eventCoords(event) { return {left: event.clientX, top: event.clientY} }\n\nfunction isNear(event, click) {\n  let dx = click.x - event.clientX, dy = click.y - event.clientY\n  return dx * dx + dy * dy < 100\n}\n\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n                                                    : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n      return true\n  }\n  return false\n}\n\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) view.focus()\n  let tr = view.state.tr.setSelection(selection)\n  if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n  view.dispatch(tr)\n}\n\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\")\n    return true\n  }\n  return false\n}\n\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) return false\n  let sel = view.state.selection, selectedNode, selectAt\n  if (sel instanceof NodeSelection) selectedNode = sel.node\n\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 &&\n          i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n        selectAt = $pos.before(sel.$from.depth)\n      else\n        selectAt = $pos.before(i)\n      break\n    }\n  }\n\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\")\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n    (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside))\n}\n\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleDoubleClick\", f => f(view, pos, event))\n}\n\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n    defaultTripleClick(view, inside)\n}\n\nfunction defaultTripleClick(view, inside) {\n  let doc = view.state.doc\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\")\n      return true\n    }\n    return false\n  }\n\n  let $pos = doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    let nodePos = $pos.before(i)\n    if (node.inlineContent)\n      updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\")\n    else if (NodeSelection.isSelectable(node))\n      updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\")\n    else\n      continue\n    return true\n  }\n}\n\nfunction forceDOMFlush(view) {\n  return endComposition(view)\n}\n\nconst selectNodeModifier = browser.mac ? \"metaKey\" : \"ctrlKey\"\n\nhandlers.mousedown = (view, event) => {\n  view.shiftKey = event.shiftKey\n  let flushed = forceDOMFlush(view)\n  let now = Date.now(), type = \"singleClick\"\n  if (now - view.lastClick.time < 500 && isNear(event, view.lastClick) && !event[selectNodeModifier]) {\n    if (view.lastClick.type == \"singleClick\") type = \"doubleClick\"\n    else if (view.lastClick.type == \"doubleClick\") type = \"tripleClick\"\n  }\n  view.lastClick = {time: now, x: event.clientX, y: event.clientY, type}\n\n  let pos = view.posAtCoords(eventCoords(event))\n  if (!pos) return\n\n  if (type == \"singleClick\") {\n    if (view.mouseDown) view.mouseDown.done()\n    view.mouseDown = new MouseDown(view, pos, event, flushed)\n  } else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n    event.preventDefault()\n  } else {\n    setSelectionOrigin(view, \"pointer\")\n  }\n}\n\nclass MouseDown {\n  constructor(view, pos, event, flushed) {\n    this.view = view\n    this.startDoc = view.state.doc\n    this.pos = pos\n    this.event = event\n    this.flushed = flushed\n    this.selectNode = event[selectNodeModifier]\n    this.allowDefault = event.shiftKey\n\n    let targetNode, targetPos\n    if (pos.inside > -1) {\n      targetNode = view.state.doc.nodeAt(pos.inside)\n      targetPos = pos.inside\n    } else {\n      let $pos = view.state.doc.resolve(pos.pos)\n      targetNode = $pos.parent\n      targetPos = $pos.depth ? $pos.before() : 0\n    }\n\n    this.mightDrag = null\n\n    const target = flushed ? null : event.target\n    const targetDesc = target ? view.docView.nearestDesc(target, true) : null\n    this.target = targetDesc ? targetDesc.dom : null\n\n    if (targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n        view.state.selection instanceof NodeSelection && targetPos == view.state.selection.from)\n      this.mightDrag = {node: targetNode,\n                        pos: targetPos,\n                        addAttr: this.target && !this.target.draggable,\n                        setUneditable: this.target && browser.gecko && !this.target.hasAttribute(\"contentEditable\")}\n\n    if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.draggable = true\n      if (this.mightDrag.setUneditable)\n        setTimeout(() => {\n          if (this.view.mouseDown == this) this.target.setAttribute(\"contentEditable\", \"false\")\n        }, 20)\n      this.view.domObserver.start()\n    }\n\n    view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this))\n    view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this))\n    setSelectionOrigin(view, \"pointer\")\n  }\n\n  done() {\n    this.view.root.removeEventListener(\"mouseup\", this.up)\n    this.view.root.removeEventListener(\"mousemove\", this.move)\n    if (this.mightDrag && this.target) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.removeAttribute(\"draggable\")\n      if (this.mightDrag.setUneditable) this.target.removeAttribute(\"contentEditable\")\n      this.view.domObserver.start()\n    }\n    this.view.mouseDown = null\n  }\n\n  up(event) {\n    this.done()\n\n    if (!this.view.dom.contains(event.target.nodeType == 3 ? event.target.parentNode : event.target))\n      return\n\n    let pos = this.pos\n    if (this.view.state.doc != this.startDoc) pos = this.view.posAtCoords(eventCoords(event))\n\n    if (this.allowDefault || !pos) {\n      setSelectionOrigin(this.view, \"pointer\")\n    } else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n      event.preventDefault()\n    } else if (this.flushed ||\n               // Safari ignores clicks on draggable elements\n               (browser.safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n               // Chrome will sometimes treat a node selection as a\n               // cursor, but still report that the node is selected\n               // when asked through getSelection. You'll then get a\n               // situation where clicking at the point where that\n               // (hidden) cursor is doesn't change the selection, and\n               // thus doesn't get a reaction from ProseMirror. This\n               // works around that.\n               (browser.chrome && !(this.view.state.selection instanceof TextSelection) &&\n                (pos.pos == this.view.state.selection.from || pos.pos == this.view.state.selection.to))) {\n      updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\")\n      event.preventDefault()\n    } else {\n      setSelectionOrigin(this.view, \"pointer\")\n    }\n  }\n\n  move(event) {\n    if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n                               Math.abs(this.event.y - event.clientY) > 4))\n      this.allowDefault = true\n    setSelectionOrigin(this.view, \"pointer\")\n    if (event.buttons == 0) this.done()\n  }\n}\n\nhandlers.touchdown = view => {\n  forceDOMFlush(view)\n  setSelectionOrigin(view, \"pointer\")\n}\n\nhandlers.contextmenu = view => forceDOMFlush(view)\n\nfunction inOrNearComposition(view, event) {\n  if (view.composing) return true\n  // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n  // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n  // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n  // emitted. The keydown event triggers newline insertion, which we don't want.\n  // This method returns true if the keydown event should be ignored.\n  // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n  // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n  // This guards against the case where compositionend is triggered without the keyboard\n  // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n  // afterwards- we wouldn't want to ignore the keydown event in this case.\n  if (browser.safari && Math.abs(event.timeStamp - view.compositionEndedAt) < 500) {\n    view.compositionEndedAt = -2e8\n    return true\n  }\n  return false\n}\n\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = browser.android ? 5000 : -1\n\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n  if (!view.composing) {\n    view.domObserver.flush()\n    let {state} = view, $pos = state.selection.$from\n    if (state.selection.empty &&\n        (state.storedMarks ||\n         (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n      // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n      view.markCursor = view.state.storedMarks || $pos.marks()\n      endComposition(view, true)\n      view.markCursor = null\n    } else {\n      endComposition(view)\n      // In firefox, if the cursor is after but outside a marked node,\n      // the inserted text won't inherit the marks. So this moves it\n      // inside if necessary.\n      if (browser.gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n        let sel = view.root.getSelection()\n        for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n          let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1]\n          if (!before) break\n          if (before.nodeType == 3) {\n            sel.collapse(before, before.nodeValue.length)\n            break\n          } else {\n            node = before\n            offset = -1\n          }\n        }\n      }\n    }\n    view.composing = true\n  }\n  scheduleComposeEnd(view, timeoutComposition)\n}\n\neditHandlers.compositionend = (view, event) => {\n  if (view.composing) {\n    view.composing = false\n    view.compositionEndedAt = event.timeStamp\n    scheduleComposeEnd(view, 20)\n  }\n}\n\nfunction scheduleComposeEnd(view, delay) {\n  clearTimeout(view.composingTimeout)\n  if (delay > -1) view.composingTimeout = setTimeout(() => endComposition(view), delay)\n}\n\nexport function clearComposition(view) {\n  view.composing = false\n  while (view.compositionNodes.length > 0) view.compositionNodes.pop().markParentsDirty()\n}\n\nexport function endComposition(view, forceUpdate) {\n  view.domObserver.forceFlush()\n  clearComposition(view)\n  if (forceUpdate || view.docView.dirty) {\n    let sel = selectionFromDOM(view)\n    if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n    else view.updateState(view.state)\n    return true\n  }\n  return false\n}\n\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  if (!view.dom.parentNode) return\n  let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"))\n  wrap.appendChild(dom)\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  let sel = getSelection(), range = document.createRange()\n  range.selectNodeContents(dom)\n  // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n  view.dom.blur()\n  sel.removeAllRanges()\n  sel.addRange(range)\n  setTimeout(() => {\n    if (wrap.parentNode) wrap.parentNode.removeChild(wrap)\n    view.focus()\n  }, 50)\n}\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API\u2014all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n      (browser.ios && browser.webkit_version < 604)\n\nhandlers.copy = editHandlers.cut = (view, e) => {\n  let sel = view.state.selection, cut = e.type == \"cut\"\n  if (sel.empty) return\n\n  // IE and Edge's clipboard interface is completely broken\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  let slice = sel.content(), {dom, text} = serializeForClipboard(view, slice)\n  if (data) {\n    e.preventDefault()\n    data.clearData()\n    data.setData(\"text/html\", dom.innerHTML)\n    data.setData(\"text/plain\", text)\n  } else {\n    captureCopy(view, dom)\n  }\n  if (cut) view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"))\n}\n\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null\n}\n\nfunction capturePaste(view, e) {\n  if (!view.dom.parentNode) return\n  let plainText = view.shiftKey || view.state.selection.$from.parent.type.spec.code\n  let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"))\n  if (!plainText) target.contentEditable = \"true\"\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.focus()\n  setTimeout(() => {\n    view.focus()\n    if (target.parentNode) target.parentNode.removeChild(target)\n    if (plainText) doPaste(view, target.value, null, e)\n    else doPaste(view, target.textContent, target.innerHTML, e)\n  }, 50)\n}\n\nfunction doPaste(view, text, html, e) {\n  let slice = parseFromClipboard(view, text, html, view.shiftKey, view.state.selection.$from)\n  if (view.someProp(\"handlePaste\", f => f(view, e, slice || Slice.empty))) return true\n  if (!slice) return false\n\n  let singleNode = sliceSingleNode(slice)\n  let tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, view.shiftKey) : view.state.tr.replaceSelection(slice)\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"))\n  return true\n}\n\neditHandlers.paste = (view, e) => {\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), e)) e.preventDefault()\n  else capturePaste(view, e)\n}\n\nclass Dragging {\n  constructor(slice, move) {\n    this.slice = slice\n    this.move = move\n  }\n}\n\nconst dragCopyModifier = browser.mac ? \"altKey\" : \"ctrlKey\"\n\nhandlers.dragstart = (view, e) => {\n  let mouseDown = view.mouseDown\n  if (mouseDown) mouseDown.done()\n  if (!e.dataTransfer) return\n\n  let sel = view.state.selection\n  let pos = sel.empty ? null : view.posAtCoords(eventCoords(e))\n  if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1: sel.to)) {\n    // In selection\n  } else if (mouseDown && mouseDown.mightDrag) {\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)))\n  } else if (e.target && e.target.nodeType == 1) {\n    let desc = view.docView.nearestDesc(e.target, true)\n    if (!desc || !desc.node.type.spec.draggable || desc == view.docView) return\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)))\n  }\n  let slice = view.state.selection.content(), {dom, text} = serializeForClipboard(view, slice)\n  e.dataTransfer.clearData()\n  e.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML)\n  // See https://github.com/ProseMirror/prosemirror/issues/1156\n  e.dataTransfer.effectAllowed = \"copyMove\"\n  if (!brokenClipboardAPI) e.dataTransfer.setData(\"text/plain\", text)\n  view.dragging = new Dragging(slice, !e[dragCopyModifier])\n}\n\nhandlers.dragend = view => {\n  let dragging = view.dragging\n  window.setTimeout(() => {\n    if (view.dragging == dragging)  view.dragging = null\n  }, 50)\n}\n\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault()\n\neditHandlers.drop = (view, e) => {\n  let dragging = view.dragging\n  view.dragging = null\n\n  if (!e.dataTransfer) return\n\n  let eventPos = view.posAtCoords(eventCoords(e))\n  if (!eventPos) return\n  let $mouse = view.state.doc.resolve(eventPos.pos)\n  if (!$mouse) return\n  let slice = dragging && dragging.slice ||\n      parseFromClipboard(view, e.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"),\n                         brokenClipboardAPI ? null : e.dataTransfer.getData(\"text/html\"), false, $mouse)\n  let move = dragging && !e[dragCopyModifier]\n  if (view.someProp(\"handleDrop\", f => f(view, e, slice || Slice.empty, move))) {\n    e.preventDefault()\n    return\n  }\n  if (!slice) return\n\n  e.preventDefault()\n  let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos\n  if (insertPos == null) insertPos = $mouse.pos\n\n  let tr = view.state.tr\n  if (move) tr.deleteSelection()\n\n  let pos = tr.mapping.map(insertPos)\n  let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1\n  let beforeInsert = tr.doc\n  if (isNode)\n    tr.replaceRangeWith(pos, pos, slice.content.firstChild)\n  else\n    tr.replaceRange(pos, pos, slice)\n  if (tr.doc.eq(beforeInsert)) return\n\n  let $pos = tr.doc.resolve(pos)\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n      $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n    tr.setSelection(new NodeSelection($pos))\n  } else {\n    let end = tr.mapping.map(insertPos)\n    tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo)\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)))\n  }\n  view.focus()\n  view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"))\n}\n\nhandlers.focus = view => {\n  if (!view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.add(\"ProseMirror-focused\")\n    view.domObserver.start()\n    view.focused = true\n    setTimeout(() => {\n      if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.root.getSelection()))\n        selectionToDOM(view)\n    }, 20)\n  }\n}\n\nhandlers.blur = view => {\n  if (view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.remove(\"ProseMirror-focused\")\n    view.domObserver.start()\n    view.domObserver.currentSelection.set({})\n    view.focused = false\n  }\n}\n\nhandlers.beforeinput = (view, event) => {\n  // We should probably do more with beforeinput events, but support\n  // is so spotty that I'm still waiting to see where they are going.\n\n  // Very specific hack to deal with backspace sometimes failing on\n  // Chrome Android when after an uneditable node.\n  if (browser.chrome && browser.android && event.inputType == \"deleteContentBackward\") {\n    let {domChangeCount} = view\n    setTimeout(() => {\n      if (view.domChangeCount != domChangeCount) return // Event already had some effect\n      // This bug tends to close the virtual keyboard, so we refocus\n      view.dom.blur()\n      view.focus()\n      if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) return\n      let {$cursor} = view.state.selection\n      // Crude approximation of backspace behavior when no command handled it\n      if ($cursor && $cursor.pos > 0) view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView())\n    }, 50)\n  }\n}\n\n// Make sure all handlers get registered\nfor (let prop in editHandlers) handlers[prop] = editHandlers[prop]\n", "function compareObjs(a, b) {\n  if (a == b) return true\n  for (let p in a) if (a[p] !== b[p]) return false\n  for (let p in b) if (!(p in a)) return false\n  return true\n}\n\nclass WidgetType {\n  constructor(toDOM, spec) {\n    this.spec = spec || noSpec\n    this.side = this.spec.side || 0\n    this.toDOM = toDOM\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let {pos, deleted} = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1)\n    return deleted ? null : new Decoration(pos - offset, pos - offset, this)\n  }\n\n  valid() { return true }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof WidgetType &&\n       (this.spec.key && this.spec.key == other.spec.key ||\n        this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)))\n  }\n}\n\nclass InlineType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset\n    let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset\n    return from >= to ? null : new Decoration(from, to, this)\n  }\n\n  valid(_, span) { return span.from < span.to }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n\n  static is(span) { return span.type instanceof InlineType }\n}\n\nclass NodeType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.mapResult(span.from + oldOffset, 1)\n    if (from.deleted) return null\n    let to = mapping.mapResult(span.to + oldOffset, -1)\n    if (to.deleted || to.pos <= from.pos) return null\n    return new Decoration(from.pos - offset, to.pos - offset, this)\n  }\n\n  valid(node, span) {\n    let {index, offset} = node.content.findIndex(span.from)\n    return offset == span.from && offset + node.child(index).nodeSize == span.to\n  }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n}\n\n// ::- Decoration objects can be provided to the view through the\n// [`decorations` prop](#view.EditorProps.decorations). They come in\n// several variants\u2014see the static members of this class for details.\nexport class Decoration {\n  constructor(from, to, type) {\n    // :: number\n    // The start position of the decoration.\n    this.from = from\n    // :: number\n    // The end position. Will be the same as `from` for [widget\n    // decorations](#view.Decoration^widget).\n    this.to = to\n    this.type = type\n  }\n\n  copy(from, to) {\n    return new Decoration(from, to, this.type)\n  }\n\n  eq(other, offset = 0) {\n    return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to\n  }\n\n  map(mapping, offset, oldOffset) {\n    return this.type.map(mapping, this, offset, oldOffset)\n  }\n\n  // :: (number, union<(view: EditorView, getPos: () \u2192 number) \u2192 dom.Node, dom.Node>, ?Object) \u2192 Decoration\n  // Creates a widget decoration, which is a DOM node that's shown in\n  // the document at the given position. It is recommended that you\n  // delay rendering the widget by passing a function that will be\n  // called when the widget is actually drawn in a view, but you can\n  // also directly pass a DOM node. `getPos` can be used to find the\n  // widget's current document position.\n  //\n  //   spec::- These options are supported:\n  //\n  //     side:: ?number\n  //     Controls which side of the document position this widget is\n  //     associated with. When negative, it is drawn before a cursor\n  //     at its position, and content inserted at that position ends\n  //     up after the widget. When zero (the default) or positive, the\n  //     widget is drawn after the cursor and content inserted there\n  //     ends up before the widget.\n  //\n  //     When there are multiple widgets at a given position, their\n  //     `side` values determine the order in which they appear. Those\n  //     with lower values appear first. The ordering of widgets with\n  //     the same `side` value is unspecified.\n  //\n  //     When `marks` is null, `side` also determines the marks that\n  //     the widget is wrapped in\u2014those of the node before when\n  //     negative, those of the node after when positive.\n  //\n  //     marks:: ?[Mark]\n  //     The precise set of marks to draw around the widget.\n  //\n  //     stopEvent:: ?(event: dom.Event) \u2192 bool\n  //     Can be used to control which DOM events, when they bubble out\n  //     of this widget, the editor view should ignore.\n  //\n  //     ignoreSelection:: ?bool\n  //     When set (defaults to false), selection changes inside the\n  //     widget are ignored, and don't cause ProseMirror to try and\n  //     re-sync the selection with its selection state.\n  //\n  //     key:: ?string\n  //     When comparing decorations of this type (in order to decide\n  //     whether it needs to be redrawn), ProseMirror will by default\n  //     compare the widget DOM node by identity. If you pass a key,\n  //     that key will be compared instead, which can be useful when\n  //     you generate decorations on the fly and don't want to store\n  //     and reuse DOM nodes. Make sure that any widgets with the same\n  //     key are interchangeable\u2014if widgets differ in, for example,\n  //     the behavior of some event handler, they should get\n  //     different keys.\n  static widget(pos, toDOM, spec) {\n    return new Decoration(pos, pos, new WidgetType(toDOM, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) \u2192 Decoration\n  // Creates an inline decoration, which adds the given attributes to\n  // each inline node between `from` and `to`.\n  //\n  //   spec::- These options are recognized:\n  //\n  //     inclusiveStart:: ?bool\n  //     Determines how the left side of the decoration is\n  //     [mapped](#transform.Position_Mapping) when content is\n  //     inserted directly at that position. By default, the decoration\n  //     won't include the new content, but you can set this to `true`\n  //     to make it inclusive.\n  //\n  //     inclusiveEnd:: ?bool\n  //     Determines how the right side of the decoration is mapped.\n  //     See\n  //     [`inclusiveStart`](#view.Decoration^inline^spec.inclusiveStart).\n  static inline(from, to, attrs, spec) {\n    return new Decoration(from, to, new InlineType(attrs, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) \u2192 Decoration\n  // Creates a node decoration. `from` and `to` should point precisely\n  // before and after a node in the document. That node, and only that\n  // node, will receive the given attributes.\n  //\n  //   spec::-\n  //\n  //   Optional information to store with the decoration. It\n  //   is also used when comparing decorators for equality.\n  static node(from, to, attrs, spec) {\n    return new Decoration(from, to, new NodeType(attrs, spec))\n  }\n\n  // :: Object\n  // The spec provided when creating this decoration. Can be useful\n  // if you've stored extra information in that object.\n  get spec() { return this.type.spec }\n\n  get inline() { return this.type instanceof InlineType }\n}\n\n// DecorationAttrs:: interface\n// A set of attributes to add to a decorated node. Most properties\n// simply directly correspond to DOM attributes of the same name,\n// which will be set to the property's value. These are exceptions:\n//\n//   class:: ?string\n//   A CSS class name or a space-separated set of class names to be\n//   _added_ to the classes that the node already had.\n//\n//   style:: ?string\n//   A string of CSS to be _added_ to the node's existing `style` property.\n//\n//   nodeName:: ?string\n//   When non-null, the target node is wrapped in a DOM element of\n//   this type (and the other attributes are applied to this element).\n\nconst none = [], noSpec = {}\n\n// :: class extends DecorationSource\n// A collection of [decorations](#view.Decoration), organized in\n// such a way that the drawing algorithm can efficiently use and\n// compare them. This is a persistent data structure\u2014it is not\n// modified, updates create a new value.\nexport class DecorationSet {\n  constructor(local, children) {\n    this.local = local && local.length ? local : none\n    this.children = children && children.length ? children : none\n  }\n\n  // :: (Node, [Decoration]) \u2192 DecorationSet\n  // Create a set of decorations, using the structure of the given\n  // document.\n  static create(doc, decorations) {\n    return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty\n  }\n\n  // :: (?number, ?number, ?(spec: Object) \u2192 bool) \u2192 [Decoration]\n  // Find all decorations in this set which touch the given range\n  // (including decorations that start or end directly at the\n  // boundaries) and match the given predicate on their spec. When\n  // `start` and `end` are omitted, all decorations in the set are\n  // considered. When `predicate` isn't given, all decorations are\n  // assumed to match.\n  find(start, end, predicate) {\n    let result = []\n    this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate)\n    return result\n  }\n\n  findInner(start, end, result, offset, predicate) {\n    for (let i = 0; i < this.local.length; i++) {\n      let span = this.local[i]\n      if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n        result.push(span.copy(span.from + offset, span.to + offset))\n    }\n    for (let i = 0; i < this.children.length; i += 3) {\n      if (this.children[i] < end && this.children[i + 1] > start) {\n        let childOff = this.children[i] + 1\n        this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate)\n      }\n    }\n  }\n\n  // :: (Mapping, Node, ?Object) \u2192 DecorationSet\n  // Map the set of decorations in response to a change in the\n  // document.\n  //\n  //   options::- An optional set of options.\n  //\n  //     onRemove:: ?(decorationSpec: Object)\n  //     When given, this function will be called for each decoration\n  //     that gets dropped as a result of the mapping, passing the\n  //     spec of that decoration.\n  map(mapping, doc, options) {\n    if (this == empty || mapping.maps.length == 0) return this\n    return this.mapInner(mapping, doc, 0, 0, options || noSpec)\n  }\n\n  mapInner(mapping, node, offset, oldOffset, options) {\n    let newLocal\n    for (let i = 0; i < this.local.length; i++) {\n      let mapped = this.local[i].map(mapping, offset, oldOffset)\n      if (mapped && mapped.type.valid(node, mapped)) (newLocal || (newLocal = [])).push(mapped)\n      else if (options.onRemove) options.onRemove(this.local[i].spec)\n    }\n\n    if (this.children.length)\n      return mapChildren(this.children, newLocal, mapping, node, offset, oldOffset, options)\n    else\n      return newLocal ? new DecorationSet(newLocal.sort(byPos)) : empty\n  }\n\n  // :: (Node, [Decoration]) \u2192 DecorationSet\n  // Add the given array of decorations to the ones in the set,\n  // producing a new set. Needs access to the current document to\n  // create the appropriate tree structure.\n  add(doc, decorations) {\n    if (!decorations.length) return this\n    if (this == empty) return DecorationSet.create(doc, decorations)\n    return this.addInner(doc, decorations, 0)\n  }\n\n  addInner(doc, decorations, offset) {\n    let children, childIndex = 0\n    doc.forEach((childNode, childOffset) => {\n      let baseOffset = childOffset + offset, found\n      if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) return\n\n      if (!children) children = this.children.slice()\n      while (childIndex < children.length && children[childIndex] < childOffset) childIndex += 3\n      if (children[childIndex] == childOffset)\n        children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1)\n      else\n        children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec))\n      childIndex += 3\n    })\n\n    let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset)\n    for (let i = 0; i < local.length; i++) if (!local[i].type.valid(doc, local[i])) local.splice(i--, 1)\n\n    return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local,\n                             children || this.children)\n  }\n\n  // :: ([Decoration]) \u2192 DecorationSet\n  // Create a new set that contains the decorations in this set, minus\n  // the ones in the given array.\n  remove(decorations) {\n    if (decorations.length == 0 || this == empty) return this\n    return this.removeInner(decorations, 0)\n  }\n\n  removeInner(decorations, offset) {\n    let children = this.children, local = this.local\n    for (let i = 0; i < children.length; i += 3) {\n      let found, from = children[i] + offset, to = children[i + 1] + offset\n      for (let j = 0, span; j < decorations.length; j++) if (span = decorations[j]) {\n        if (span.from > from && span.to < to) {\n          decorations[j] = null\n          ;(found || (found = [])).push(span)\n        }\n      }\n      if (!found) continue\n      if (children == this.children) children = this.children.slice()\n      let removed = children[i + 2].removeInner(found, from + 1)\n      if (removed != empty) {\n        children[i + 2] = removed\n      } else {\n        children.splice(i, 3)\n        i -= 3\n      }\n    }\n    if (local.length) for (let i = 0, span; i < decorations.length; i++) if (span = decorations[i]) {\n      for (let j = 0; j < local.length; j++) if (local[j].eq(span, offset)) {\n        if (local == this.local) local = this.local.slice()\n        local.splice(j--, 1)\n      }\n    }\n    if (children == this.children && local == this.local) return this\n    return local.length || children.length ? new DecorationSet(local, children) : empty\n  }\n\n  forChild(offset, node) {\n    if (this == empty) return this\n    if (node.isLeaf) return DecorationSet.empty\n\n    let child, local\n    for (let i = 0; i < this.children.length; i += 3) if (this.children[i] >= offset) {\n      if (this.children[i] == offset) child = this.children[i + 2]\n      break\n    }\n    let start = offset + 1, end = start + node.content.size\n    for (let i = 0; i < this.local.length; i++) {\n      let dec = this.local[i]\n      if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n        let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start\n        if (from < to) (local || (local = [])).push(dec.copy(from, to))\n      }\n    }\n    if (local) {\n      let localSet = new DecorationSet(local.sort(byPos))\n      return child ? new DecorationGroup([localSet, child]) : localSet\n    }\n    return child || empty\n  }\n\n  eq(other) {\n    if (this == other) return true\n    if (!(other instanceof DecorationSet) ||\n        this.local.length != other.local.length ||\n        this.children.length != other.children.length) return false\n    for (let i = 0; i < this.local.length; i++)\n      if (!this.local[i].eq(other.local[i])) return false\n    for (let i = 0; i < this.children.length; i += 3)\n      if (this.children[i] != other.children[i] ||\n          this.children[i + 1] != other.children[i + 1] ||\n          !this.children[i + 2].eq(other.children[i + 2])) return false\n    return true\n  }\n\n  locals(node) {\n    return removeOverlap(this.localsInner(node))\n  }\n\n  localsInner(node) {\n    if (this == empty) return none\n    if (node.inlineContent || !this.local.some(InlineType.is)) return this.local\n    let result = []\n    for (let i = 0; i < this.local.length; i++) {\n      if (!(this.local[i].type instanceof InlineType))\n        result.push(this.local[i])\n    }\n    return result\n  }\n}\n\n// DecorationSource:: interface\n// An object that can [provide](#view.EditorProps.decorations)\n// decorations. Implemented by [`DecorationSet`](#view.DecorationSet),\n// and passed to [node views](#view.EditorProps.nodeViews).\n\nconst empty = new DecorationSet()\n\n// :: DecorationSet\n// The empty set of decorations.\nDecorationSet.empty = empty\n\nDecorationSet.removeOverlap = removeOverlap\n\n// :- An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n  constructor(members) {\n    this.members = members\n  }\n\n  forChild(offset, child) {\n    if (child.isLeaf) return DecorationSet.empty\n    let found = []\n    for (let i = 0; i < this.members.length; i++) {\n      let result = this.members[i].forChild(offset, child)\n      if (result == empty) continue\n      if (result instanceof DecorationGroup) found = found.concat(result.members)\n      else found.push(result)\n    }\n    return DecorationGroup.from(found)\n  }\n\n  eq(other) {\n    if (!(other instanceof DecorationGroup) ||\n        other.members.length != this.members.length) return false\n    for (let i = 0; i < this.members.length; i++)\n      if (!this.members[i].eq(other.members[i])) return false\n    return true\n  }\n\n  locals(node) {\n    let result, sorted = true\n    for (let i = 0; i < this.members.length; i++) {\n      let locals = this.members[i].localsInner(node)\n      if (!locals.length) continue\n      if (!result) {\n        result = locals\n      } else {\n        if (sorted) {\n          result = result.slice()\n          sorted = false\n        }\n        for (let j = 0; j < locals.length; j++) result.push(locals[j])\n      }\n    }\n    return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none\n  }\n\n  // : ([DecorationSet]) \u2192 union<DecorationSet, DecorationGroup>\n  // Create a group for the given array of decoration sets, or return\n  // a single set when possible.\n  static from(members) {\n    switch (members.length) {\n      case 0: return empty\n      case 1: return members[0]\n      default: return new DecorationGroup(members)\n    }\n  }\n}\n\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  let children = oldChildren.slice()\n\n  // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n  let shift = (oldStart, oldEnd, newStart, newEnd) => {\n    for (let i = 0; i < children.length; i += 3) {\n      let end = children[i + 1], dSize\n      if (end == -1 || oldStart > end + oldOffset) continue\n      if (oldEnd >= children[i] + oldOffset) {\n        children[i + 1] = -1\n      } else if (newStart >= offset && (dSize = (newEnd - newStart) - (oldEnd - oldStart))) {\n        children[i] += dSize\n        children[i + 1] += dSize\n      }\n    }\n  }\n  for (let i = 0; i < mapping.maps.length; i++) mapping.maps[i].forEach(shift)\n\n  // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n  let mustRebuild = false\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1) { // Touched nodes\n    let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset\n    if (fromLocal < 0 || fromLocal >= node.content.size) {\n      mustRebuild = true\n      continue\n    }\n    // Must read oldChildren because children was tagged with -1\n    let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset\n    let {index, offset: childOffset} = node.content.findIndex(fromLocal)\n    let childNode = node.maybeChild(index)\n    if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n      let mapped = children[i + 2].mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options)\n      if (mapped != empty) {\n        children[i] = fromLocal\n        children[i + 1] = toLocal\n        children[i + 2] = mapped\n      } else {\n        children[i + 1] = -2\n        mustRebuild = true\n      }\n    } else {\n      mustRebuild = true\n    }\n  }\n\n  // Remaining children must be collected and rebuilt into the appropriate structure\n  if (mustRebuild) {\n    let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal || [], mapping,\n                                                       offset, oldOffset, options)\n    let built = buildTree(decorations, node, 0, options)\n    newLocal = built.local\n    for (let i = 0; i < children.length; i += 3) if (children[i + 1] < 0) {\n      children.splice(i, 3)\n      i -= 3\n    }\n    for (let i = 0, j = 0; i < built.children.length; i += 3) {\n      let from = built.children[i]\n      while (j < children.length && children[j] < from) j += 3\n      children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2])\n    }\n  }\n\n  return new DecorationSet(newLocal && newLocal.sort(byPos), children)\n}\n\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) return spans\n  let result = []\n  for (let i = 0; i < spans.length; i++) {\n    let span = spans[i]\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type))\n  }\n  return result\n}\n\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (let i = 0; i < set.local.length; i++) {\n      let mapped = set.local[i].map(mapping, offset, oldOffset)\n      if (mapped) decorations.push(mapped)\n      else if (options.onRemove) options.onRemove(set.local[i].spec)\n    }\n    for (let i = 0; i < set.children.length; i += 3)\n      gather(set.children[i + 2], set.children[i] + oldOffset + 1)\n  }\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1)\n    gather(children[i + 2], oldChildren[i] + oldOffset + 1)\n\n  return decorations\n}\n\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) return null\n  let end = offset + node.nodeSize, found = null\n  for (let i = 0, span; i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n      ;(found || (found = [])).push(span)\n      spans[i] = null\n    }\n  }\n  return found\n}\n\nfunction withoutNulls(array) {\n  let result = []\n  for (let i = 0; i < array.length; i++)\n    if (array[i] != null) result.push(array[i])\n  return result\n}\n\n// : ([Decoration], Node, number) \u2192 DecorationSet\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtractet from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n  let children = [], hasNulls = false\n  node.forEach((childNode, localStart) => {\n    let found = takeSpansForNode(spans, childNode, localStart + offset)\n    if (found) {\n      hasNulls = true\n      let subtree = buildTree(found, childNode, offset + localStart + 1, options)\n      if (subtree != empty)\n        children.push(localStart, localStart + childNode.nodeSize, subtree)\n    }\n  })\n  let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos)\n  for (let i = 0; i < locals.length; i++) if (!locals[i].type.valid(node, locals[i])) {\n    if (options.onRemove) options.onRemove(locals[i].spec)\n    locals.splice(i--, 1)\n  }\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty\n}\n\n// : (Decoration, Decoration) \u2192 number\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to\n}\n\n// : ([Decoration]) \u2192 [Decoration]\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n  let working = spans\n  for (let i = 0; i < working.length - 1; i++) {\n    let span = working[i]\n    if (span.from != span.to) for (let j = i + 1; j < working.length; j++) {\n      let next = working[j]\n      if (next.from == span.from) {\n        if (next.to != span.to) {\n          if (working == spans) working = spans.slice()\n          // Followed by a partially overlapping larger span. Split that\n          // span.\n          working[j] = next.copy(next.from, span.to)\n          insertAhead(working, j + 1, next.copy(span.to, next.to))\n        }\n        continue\n      } else {\n        if (next.from < span.to) {\n          if (working == spans) working = spans.slice()\n          // The end of this one overlaps with a subsequent span. Split\n          // this one.\n          working[i] = span.copy(span.from, next.from)\n          insertAhead(working, j, span.copy(next.from, span.to))\n        }\n        break\n      }\n    }\n  }\n  return working\n}\n\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) i++\n  array.splice(i, 0, deco)\n}\n\n// : (EditorView) \u2192 union<DecorationSet, DecorationGroup>\n// Get the decorations associated with the current props of a view.\nexport function viewDecorations(view) {\n  let found = []\n  view.someProp(\"decorations\", f => {\n    let result = f(view.state)\n    if (result && result != empty) found.push(result)\n  })\n  if (view.cursorWrapper)\n    found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]))\n  return DecorationGroup.from(found)\n}\n", "import {NodeSelection} from \"prosemirror-state\"\n\nimport {scrollRectIntoView, posAtCoords, coordsAtPos, endOfTextblock, storeScrollPos,\n        resetScrollPos, focusPreventScroll} from \"./domcoords\"\nimport {docViewDesc} from \"./viewdesc\"\nimport {initInput, destroyInput, dispatchEvent, ensureListeners, clearComposition} from \"./input\"\nimport {selectionToDOM, anchorInRightPlace, syncNodeSelection} from \"./selection\"\nimport {Decoration, viewDecorations} from \"./decoration\"\nimport browser from \"./browser\"\n\nexport {Decoration, DecorationSet} from \"./decoration\"\n\n// Exported for testing\nexport {serializeForClipboard as __serializeForClipboard, parseFromClipboard as __parseFromClipboard} from \"./clipboard\"\nexport {endComposition as __endComposition} from \"./input\"\n\n// ::- An editor view manages the DOM structure that represents an\n// editable document. Its state and behavior are determined by its\n// [props](#view.DirectEditorProps).\nexport class EditorView {\n  // :: (?union<dom.Node, (dom.Node), {mount: dom.Node}>, DirectEditorProps)\n  // Create a view. `place` may be a DOM node that the editor should\n  // be appended to, a function that will place it into the document,\n  // or an object whose `mount` property holds the node to use as the\n  // document container. If it is `null`, the editor will not be added\n  // to the document.\n  constructor(place, props) {\n    this._props = props\n    // :: EditorState\n    // The view's current [state](#state.EditorState).\n    this.state = props.state\n\n    this.dispatch = this.dispatch.bind(this)\n\n    this._root = null\n    this.focused = false\n    // Kludge used to work around a Chrome bug\n    this.trackWrites = null\n\n    // :: dom.Element\n    // An editable DOM node containing the document. (You probably\n    // should not directly interfere with its content.)\n    this.dom = (place && place.mount) || document.createElement(\"div\")\n    if (place) {\n      if (place.appendChild) place.appendChild(this.dom)\n      else if (place.apply) place(this.dom)\n      else if (place.mount) this.mounted = true\n    }\n\n    // :: bool\n    // Indicates whether the editor is currently [editable](#view.EditorProps.editable).\n    this.editable = getEditable(this)\n    this.markCursor = null\n    this.cursorWrapper = null\n    updateCursorWrapper(this)\n    this.nodeViews = buildNodeViews(this)\n    this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this)\n\n    this.lastSelectedViewDesc = null\n    // :: ?{slice: Slice, move: bool}\n    // When editor content is being dragged, this object contains\n    // information about the dragged slice and whether it is being\n    // copied or moved. At any other time, it is null.\n    this.dragging = null\n\n    initInput(this)\n\n    this.pluginViews = []\n    this.updatePluginViews()\n  }\n\n  // composing:: boolean\n  // Holds `true` when a\n  // [composition](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide)\n  // is active.\n\n  // :: DirectEditorProps\n  // The view's current [props](#view.EditorProps).\n  get props() {\n    if (this._props.state != this.state) {\n      let prev = this._props\n      this._props = {}\n      for (let name in prev) this._props[name] = prev[name]\n      this._props.state = this.state\n    }\n    return this._props\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view's props. Will immediately cause an update to\n  // the DOM.\n  update(props) {\n    if (props.handleDOMEvents != this._props.handleDOMEvents) ensureListeners(this)\n    this._props = props\n    this.updateStateInner(props.state, true)\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view by updating existing props object with the object\n  // given as argument. Equivalent to `view.update(Object.assign({},\n  // view.props, props))`.\n  setProps(props) {\n    let updated = {}\n    for (let name in this._props) updated[name] = this._props[name]\n    updated.state = this.state\n    for (let name in props) updated[name] = props[name]\n    this.update(updated)\n  }\n\n  // :: (EditorState)\n  // Update the editor's `state` prop, without touching any of the\n  // other props.\n  updateState(state) {\n    this.updateStateInner(state, this.state.plugins != state.plugins)\n  }\n\n  updateStateInner(state, reconfigured) {\n    let prev = this.state, redraw = false, updateSel = false\n    // When stored marks are added, stop composition, so that they can\n    // be displayed.\n    if (state.storedMarks && this.composing) {\n      clearComposition(this)\n      updateSel = true\n    }\n    this.state = state\n    if (reconfigured) {\n      let nodeViews = buildNodeViews(this)\n      if (changedNodeViews(nodeViews, this.nodeViews)) {\n        this.nodeViews = nodeViews\n        redraw = true\n      }\n      ensureListeners(this)\n    }\n\n    this.editable = getEditable(this)\n    updateCursorWrapper(this)\n    let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this)\n\n    let scroll = reconfigured ? \"reset\"\n        : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\"\n    let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco)\n    if (updateDoc || !state.selection.eq(prev.selection)) updateSel = true\n    let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this)\n\n    if (updateSel) {\n      this.domObserver.stop()\n      // Work around an issue in Chrome, IE, and Edge where changing\n      // the DOM around an active selection puts it into a broken\n      // state where the thing the user sees differs from the\n      // selection reported by the Selection object (#710, #973,\n      // #1011, #1013, #1035).\n      let forceSelUpdate = updateDoc && (browser.ie || browser.chrome) && !this.composing &&\n          !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection)\n      if (updateDoc) {\n        // If the node that the selection points into is written to,\n        // Chrome sometimes starts misreporting the selection, so this\n        // tracks that and forces a selection reset when our update\n        // did write to the node.\n        let chromeKludge = browser.chrome ? (this.trackWrites = this.root.getSelection().focusNode) : null\n        if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n          this.docView.updateOuterDeco([])\n          this.docView.destroy()\n          this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this)\n        }\n        if (chromeKludge && !this.trackWrites) forceSelUpdate = true\n      }\n      // Work around for an issue where an update arriving right between\n      // a DOM selection change and the \"selectionchange\" event for it\n      // can cause a spurious DOM selection update, disrupting mouse\n      // drag selection.\n      if (forceSelUpdate ||\n          !(this.mouseDown && this.domObserver.currentSelection.eq(this.root.getSelection()) && anchorInRightPlace(this))) {\n        selectionToDOM(this, forceSelUpdate)\n      } else {\n        syncNodeSelection(this, state.selection)\n        this.domObserver.setCurSelection()\n      }\n      this.domObserver.start()\n    }\n\n    this.updatePluginViews(prev)\n\n    if (scroll == \"reset\") {\n      this.dom.scrollTop = 0\n    } else if (scroll == \"to selection\") {\n      let startDOM = this.root.getSelection().focusNode\n      if (this.someProp(\"handleScrollToSelection\", f => f(this)))\n        {} // Handled\n      else if (state.selection instanceof NodeSelection)\n        scrollRectIntoView(this, this.docView.domAfterPos(state.selection.from).getBoundingClientRect(), startDOM)\n      else\n        scrollRectIntoView(this, this.coordsAtPos(state.selection.head, 1), startDOM)\n    } else if (oldScrollPos) {\n      resetScrollPos(oldScrollPos)\n    }\n  }\n\n  destroyPluginViews() {\n    let view\n    while (view = this.pluginViews.pop()) if (view.destroy) view.destroy()\n  }\n\n  updatePluginViews(prevState) {\n    if (!prevState || prevState.plugins != this.state.plugins) {\n      this.destroyPluginViews()\n      for (let i = 0; i < this.state.plugins.length; i++) {\n        let plugin = this.state.plugins[i]\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this))\n      }\n    } else {\n      for (let i = 0; i < this.pluginViews.length; i++) {\n        let pluginView = this.pluginViews[i]\n        if (pluginView.update) pluginView.update(this, prevState)\n      }\n    }\n  }\n\n  // :: (string, ?(prop: *) \u2192 *) \u2192 *\n  // Goes over the values of a prop, first those provided directly,\n  // then those from plugins (in order), and calls `f` every time a\n  // non-undefined value is found. When `f` returns a truthy value,\n  // that is immediately returned. When `f` isn't provided, it is\n  // treated as the identity function (the prop value is returned\n  // directly).\n  someProp(propName, f) {\n    let prop = this._props && this._props[propName], value\n    if (prop != null && (value = f ? f(prop) : prop)) return value\n    let plugins = this.state.plugins\n    if (plugins) for (let i = 0; i < plugins.length; i++) {\n      let prop = plugins[i].props[propName]\n      if (prop != null && (value = f ? f(prop) : prop)) return value\n    }\n  }\n\n  // :: () \u2192 bool\n  // Query whether the view has focus.\n  hasFocus() {\n    return this.root.activeElement == this.dom\n  }\n\n  // :: ()\n  // Focus the editor.\n  focus() {\n    this.domObserver.stop()\n    if (this.editable) focusPreventScroll(this.dom)\n    selectionToDOM(this)\n    this.domObserver.start()\n  }\n\n  // :: union<dom.Document, dom.DocumentFragment>\n  // Get the document root in which the editor exists. This will\n  // usually be the top-level `document`, but might be a [shadow\n  // DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n  // root if the editor is inside one.\n  get root() {\n    let cached = this._root\n    if (cached == null) for (let search = this.dom.parentNode; search; search = search.parentNode) {\n      if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n        if (!search.getSelection) Object.getPrototypeOf(search).getSelection = () => document.getSelection()\n        return this._root = search\n      }\n    }\n    return cached || document\n  }\n\n  // :: ({left: number, top: number}) \u2192 ?{pos: number, inside: number}\n  // Given a pair of viewport coordinates, return the document\n  // position that corresponds to them. May return null if the given\n  // coordinates aren't inside of the editor. When an object is\n  // returned, its `pos` property is the position nearest to the\n  // coordinates, and its `inside` property holds the position of the\n  // inner node that the position falls inside of, or -1 if it is at\n  // the top level, not in any node.\n  posAtCoords(coords) {\n    return posAtCoords(this, coords)\n  }\n\n  // :: (number, number) \u2192 {left: number, right: number, top: number, bottom: number}\n  // Returns the viewport rectangle at a given document position.\n  // `left` and `right` will be the same number, as this returns a\n  // flat cursor-ish rectangle. If the position is between two things\n  // that aren't directly adjacent, `side` determines which element is\n  // used. When < 0, the element before the position is used,\n  // otherwise the element after.\n  coordsAtPos(pos, side = 1) {\n    return coordsAtPos(this, pos, side)\n  }\n\n  // :: (number, number) \u2192 {node: dom.Node, offset: number}\n  // Find the DOM position that corresponds to the given document\n  // position. When `side` is negative, find the position as close as\n  // possible to the content before the position. When positive,\n  // prefer positions close to the content after the position. When\n  // zero, prefer as shallow a position as possible.\n  //\n  // Note that you should **not** mutate the editor's internal DOM,\n  // only inspect it (and even that is usually not necessary).\n  domAtPos(pos, side = 0) {\n    return this.docView.domFromPos(pos, side)\n  }\n\n  // :: (number) \u2192 ?dom.Node\n  // Find the DOM node that represents the document node after the\n  // given position. May return `null` when the position doesn't point\n  // in front of a node or if the node is inside an opaque node view.\n  //\n  // This is intended to be able to call things like\n  // `getBoundingClientRect` on that DOM node. Do **not** mutate the\n  // editor DOM directly, or add styling this way, since that will be\n  // immediately overriden by the editor as it redraws the node.\n  nodeDOM(pos) {\n    let desc = this.docView.descAt(pos)\n    return desc ? desc.nodeDOM : null\n  }\n\n  // :: (dom.Node, number, ?number) \u2192 number\n  // Find the document position that corresponds to a given DOM\n  // position. (Whenever possible, it is preferable to inspect the\n  // document structure directly, rather than poking around in the\n  // DOM, but sometimes\u2014for example when interpreting an event\n  // target\u2014you don't have a choice.)\n  //\n  // The `bias` parameter can be used to influence which side of a DOM\n  // node to use when the position is inside a leaf node.\n  posAtDOM(node, offset, bias = -1) {\n    let pos = this.docView.posFromDOM(node, offset, bias)\n    if (pos == null) throw new RangeError(\"DOM position not inside the editor\")\n    return pos\n  }\n\n  // :: (union<\"up\", \"down\", \"left\", \"right\", \"forward\", \"backward\">, ?EditorState) \u2192 bool\n  // Find out whether the selection is at the end of a textblock when\n  // moving in a given direction. When, for example, given `\"left\"`,\n  // it will return true if moving left from the current cursor\n  // position would leave that position's parent textblock. Will apply\n  // to the view's current state by default, but it is possible to\n  // pass a different state.\n  endOfTextblock(dir, state) {\n    return endOfTextblock(this, state || this.state, dir)\n  }\n\n  // :: ()\n  // Removes the editor from the DOM and destroys all [node\n  // views](#view.NodeView).\n  destroy() {\n    if (!this.docView) return\n    destroyInput(this)\n    this.destroyPluginViews()\n    if (this.mounted) {\n      this.docView.update(this.state.doc, [], viewDecorations(this), this)\n      this.dom.textContent = \"\"\n    } else if (this.dom.parentNode) {\n      this.dom.parentNode.removeChild(this.dom)\n    }\n    this.docView.destroy()\n    this.docView = null\n  }\n\n  // Used for testing.\n  dispatchEvent(event) {\n    return dispatchEvent(this, event)\n  }\n\n  // :: (Transaction)\n  // Dispatch a transaction. Will call\n  // [`dispatchTransaction`](#view.DirectEditorProps.dispatchTransaction)\n  // when given, and otherwise defaults to applying the transaction to\n  // the current state and calling\n  // [`updateState`](#view.EditorView.updateState) with the result.\n  // This method is bound to the view instance, so that it can be\n  // easily passed around.\n  dispatch(tr) {\n    let dispatchTransaction = this._props.dispatchTransaction\n    if (dispatchTransaction) dispatchTransaction.call(this, tr)\n    else this.updateState(this.state.apply(tr))\n  }\n}\n\nfunction computeDocDeco(view) {\n  let attrs = Object.create(null)\n  attrs.class = \"ProseMirror\"\n  attrs.contenteditable = String(view.editable)\n\n  view.someProp(\"attributes\", value => {\n    if (typeof value == \"function\") value = value(view.state)\n    if (value) for (let attr in value) {\n      if (attr == \"class\")\n        attrs.class += \" \" + value[attr]\n      else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n        attrs[attr] = String(value[attr])\n    }\n  })\n\n  return [Decoration.node(0, view.state.doc.content.size, attrs)]\n}\n\nfunction updateCursorWrapper(view) {\n  if (view.markCursor) {\n    let dom = document.createElement(\"img\")\n    dom.setAttribute(\"mark-placeholder\", \"true\")\n    view.cursorWrapper = {dom, deco: Decoration.widget(view.state.selection.head, dom, {raw: true, marks: view.markCursor})}\n  } else {\n    view.cursorWrapper = null\n  }\n}\n\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", value => value(view.state) === false)\n}\n\nfunction selectionContextChanged(sel1, sel2) {\n  let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head))\n  return sel1.$anchor.start(depth) != sel2.$anchor.start(depth)\n}\n\nfunction buildNodeViews(view) {\n  let result = {}\n  view.someProp(\"nodeViews\", obj => {\n    for (let prop in obj) if (!Object.prototype.hasOwnProperty.call(result, prop))\n      result[prop] = obj[prop]\n  })\n  return result\n}\n\nfunction changedNodeViews(a, b) {\n  let nA = 0, nB = 0\n  for (let prop in a) {\n    if (a[prop] != b[prop]) return true\n    nA++\n  }\n  for (let _ in b) nB++\n  return nA != nB\n}\n\n// EditorProps:: interface\n//\n// Props are configuration values that can be passed to an editor view\n// or included in a plugin. This interface lists the supported props.\n//\n// The various event-handling functions may all return `true` to\n// indicate that they handled the given event. The view will then take\n// care to call `preventDefault` on the event, except with\n// `handleDOMEvents`, where the handler itself is responsible for that.\n//\n// How a prop is resolved depends on the prop. Handler functions are\n// called one at a time, starting with the base props and then\n// searching through the plugins (in order of appearance) until one of\n// them returns true. For some props, the first plugin that yields a\n// value gets precedence.\n//\n//   handleDOMEvents:: ?Object<(view: EditorView, event: dom.Event) \u2192 bool>\n//   Can be an object mapping DOM event type names to functions that\n//   handle them. Such functions will be called before any handling\n//   ProseMirror does of events fired on the editable DOM element.\n//   Contrary to the other event handling props, when returning true\n//   from such a function, you are responsible for calling\n//   `preventDefault` yourself (or not, if you want to allow the\n//   default behavior).\n//\n//   handleKeyDown:: ?(view: EditorView, event: dom.KeyboardEvent) \u2192 bool\n//   Called when the editor receives a `keydown` event.\n//\n//   handleKeyPress:: ?(view: EditorView, event: dom.KeyboardEvent) \u2192 bool\n//   Handler for `keypress` events.\n//\n//   handleTextInput:: ?(view: EditorView, from: number, to: number, text: string) \u2192 bool\n//   Whenever the user directly input text, this handler is called\n//   before the input is applied. If it returns `true`, the default\n//   behavior of actually inserting the text is suppressed.\n//\n//   handleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) \u2192 bool\n//   Called for each node around a click, from the inside out. The\n//   `direct` flag will be true for the inner node.\n//\n//   handleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) \u2192 bool\n//   Called when the editor is clicked, after `handleClickOn` handlers\n//   have been called.\n//\n//   handleDoubleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) \u2192 bool\n//   Called for each node around a double click.\n//\n//   handleDoubleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) \u2192 bool\n//   Called when the editor is double-clicked, after `handleDoubleClickOn`.\n//\n//   handleTripleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) \u2192 bool\n//   Called for each node around a triple click.\n//\n//   handleTripleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) \u2192 bool\n//   Called when the editor is triple-clicked, after `handleTripleClickOn`.\n//\n//   handlePaste:: ?(view: EditorView, event: dom.ClipboardEvent, slice: Slice) \u2192 bool\n//   Can be used to override the behavior of pasting. `slice` is the\n//   pasted content parsed by the editor, but you can directly access\n//   the event to get at the raw content.\n//\n//   handleDrop:: ?(view: EditorView, event: dom.Event, slice: Slice, moved: bool) \u2192 bool\n//   Called when something is dropped on the editor. `moved` will be\n//   true if this drop moves from the current selection (which should\n//   thus be deleted).\n//\n//   handleScrollToSelection:: ?(view: EditorView) \u2192 bool\n//   Called when the view, after updating its state, tries to scroll\n//   the selection into view. A handler function may return false to\n//   indicate that it did not handle the scrolling and further\n//   handlers or the default behavior should be tried.\n//\n//   createSelectionBetween:: ?(view: EditorView, anchor: ResolvedPos, head: ResolvedPos) \u2192 ?Selection\n//   Can be used to override the way a selection is created when\n//   reading a DOM selection between the given anchor and head.\n//\n//   domParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading editor changes\n//   from the DOM. Defaults to calling\n//   [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) on the\n//   editor's schema.\n//\n//   transformPastedHTML:: ?(html: string) \u2192 string\n//   Can be used to transform pasted HTML text, _before_ it is parsed,\n//   for example to clean it up.\n//\n//   clipboardParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading content from\n//   the clipboard. When not given, the value of the\n//   [`domParser`](#view.EditorProps.domParser) prop is used.\n//\n//   transformPastedText:: ?(text: string, plain: bool) \u2192 string\n//   Transform pasted plain text. The `plain` flag will be true when\n//   the text is pasted as plain text.\n//\n//   clipboardTextParser:: ?(text: string, $context: ResolvedPos, plain: bool) \u2192 Slice\n//   A function to parse text from the clipboard into a document\n//   slice. Called after\n//   [`transformPastedText`](#view.EditorProps.transformPastedText).\n//   The default behavior is to split the text into lines, wrap them\n//   in `<p>` tags, and call\n//   [`clipboardParser`](#view.EditorProps.clipboardParser) on it.\n//   The `plain` flag will be true when the text is pasted as plain text.\n//\n//   transformPasted:: ?(Slice) \u2192 Slice\n//   Can be used to transform pasted content before it is applied to\n//   the document.\n//\n//   nodeViews:: ?Object<(node: Node, view: EditorView, getPos: () \u2192 number, decorations: [Decoration], innerDecorations: DecorationSource) \u2192 NodeView>\n//   Allows you to pass custom rendering and behavior logic for nodes\n//   and marks. Should map node and mark names to constructor\n//   functions that produce a [`NodeView`](#view.NodeView) object\n//   implementing the node's display behavior. For nodes, the third\n//   argument `getPos` is a function that can be called to get the\n//   node's current position, which can be useful when creating\n//   transactions to update it. For marks, the third argument is a\n//   boolean that indicates whether the mark's content is inline.\n//\n//   `decorations` is an array of node or inline decorations that are\n//   active around the node. They are automatically drawn in the\n//   normal way, and you will usually just want to ignore this, but\n//   they can also be used as a way to provide context information to\n//   the node view without adding it to the document itself.\n//\n//   `innerDecorations` holds the decorations for the node's content.\n//   You can safely ignore this if your view has no content or a\n//   `contentDOM` property, since the editor will draw the decorations\n//   on the content. But if you, for example, want to create a nested\n//   editor with the content, it may make sense to provide it with the\n//   inner decorations.\n//\n//   clipboardSerializer:: ?DOMSerializer\n//   The DOM serializer to use when putting content onto the\n//   clipboard. If not given, the result of\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)\n//   will be used.\n//\n//   clipboardTextSerializer:: ?(Slice) \u2192 string\n//   A function that will be called to get the text for the current\n//   selection when copying text to the clipboard. By default, the\n//   editor will use [`textBetween`](#model.Node.textBetween) on the\n//   selected range.\n//\n//   decorations:: ?(state: EditorState) \u2192 ?DecorationSource\n//   A set of [document decorations](#view.Decoration) to show in the\n//   view.\n//\n//   editable:: ?(state: EditorState) \u2192 bool\n//   When this returns false, the content of the view is not directly\n//   editable.\n//\n//   attributes:: ?union<Object<string>, (EditorState) \u2192 ?Object<string>>\n//   Control the DOM attributes of the editable element. May be either\n//   an object or a function going from an editor state to an object.\n//   By default, the element will get a class `\"ProseMirror\"`, and\n//   will have its `contentEditable` attribute determined by the\n//   [`editable` prop](#view.EditorProps.editable). Additional classes\n//   provided here will be added to the class. For other attributes,\n//   the value provided first (as in\n//   [`someProp`](#view.EditorView.someProp)) will be used.\n//\n//   scrollThreshold:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the distance (in pixels) between the cursor and the\n//   end of the visible viewport at which point, when scrolling the\n//   cursor into view, scrolling takes place. Defaults to 0.\n//\n//   scrollMargin:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the extra space (in pixels) that is left above or\n//   below the cursor when it is scrolled into view. Defaults to 5.\n\n// DirectEditorProps:: interface extends EditorProps\n//\n// The props object given directly to the editor view supports two\n// fields that can't be used in plugins:\n//\n//   state:: EditorState\n//   The current state of the editor.\n//\n//   dispatchTransaction:: ?(tr: Transaction)\n//   The callback over which to send transactions (state updates)\n//   produced by the view. If you specify this, you probably want to\n//   make sure this ends up calling the view's\n//   [`updateState`](#view.EditorView.updateState) method with a new\n//   state that has the transaction\n//   [applied](#state.EditorState.apply). The callback will be bound to have\n//   the view instance as its `this` binding.\n", "import {Selection, NodeSelection} from \"prosemirror-state\"\nimport {Slice} from \"prosemirror-model\"\n\n// ::- Gap cursor selections are represented using this class. Its\n// `$anchor` and `$head` properties both point at the cursor position.\nexport class GapCursor extends Selection {\n  // : (ResolvedPos)\n  constructor($pos) {\n    super($pos, $pos)\n  }\n\n  map(doc, mapping) {\n    let $pos = doc.resolve(mapping.map(this.head))\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos)\n  }\n\n  content() { return Slice.empty }\n\n  eq(other) {\n    return other instanceof GapCursor && other.head == this.head\n  }\n\n  toJSON() {\n    return {type: \"gapcursor\", pos: this.head}\n  }\n\n  static fromJSON(doc, json) {\n    if (typeof json.pos != \"number\") throw new RangeError(\"Invalid input for GapCursor.fromJSON\")\n    return new GapCursor(doc.resolve(json.pos))\n  }\n\n  getBookmark() { return new GapBookmark(this.anchor) }\n\n  static valid($pos) {\n    let parent = $pos.parent\n    if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos)) return false\n    let override = parent.type.spec.allowGapCursor\n    if (override != null) return override\n    let deflt = parent.contentMatchAt($pos.index()).defaultType\n    return deflt && deflt.isTextblock\n  }\n\n  static findFrom($pos, dir, mustMove) {\n    search: for (;;) {\n      if (!mustMove && GapCursor.valid($pos)) return $pos\n      let pos = $pos.pos, next = null\n      // Scan up from this position\n      for (let d = $pos.depth;; d--) {\n        let parent = $pos.node(d)\n        if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n          next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1)\n          break\n        } else if (d == 0) {\n          return null\n        }\n        pos += dir\n        let $cur = $pos.doc.resolve(pos)\n        if (GapCursor.valid($cur)) return $cur\n      }\n\n      // And then down into the next node\n      for (;;) {\n        let inside = dir > 0 ? next.firstChild : next.lastChild\n        if (!inside) {\n          if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n            $pos = $pos.doc.resolve(pos + next.nodeSize * dir)\n            mustMove = false\n            continue search\n          }\n          break\n        }\n        next = inside\n        pos += dir\n        let $cur = $pos.doc.resolve(pos)\n        if (GapCursor.valid($cur)) return $cur\n      }\n\n      return null\n    }\n  }\n}\n\nGapCursor.prototype.visible = false\n\nSelection.jsonID(\"gapcursor\", GapCursor)\n\nclass GapBookmark {\n  constructor(pos) {\n    this.pos = pos\n  }\n  map(mapping) {\n    return new GapBookmark(mapping.map(this.pos))\n  }\n  resolve(doc) {\n    let $pos = doc.resolve(this.pos)\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos)\n  }\n}\n\nfunction closedBefore($pos) {\n  for (let d = $pos.depth; d >= 0; d--) {\n    let index = $pos.index(d)\n    // At the start of this parent, look at next one\n    if (index == 0) continue\n    // See if the node before (or its first ancestor) is closed\n    for (let before = $pos.node(d).child(index - 1);; before = before.lastChild) {\n      if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating) return true\n      if (before.inlineContent) return false\n    }\n  }\n  // Hit start of document\n  return true\n}\n\nfunction closedAfter($pos) {\n  for (let d = $pos.depth; d >= 0; d--) {\n    let index = $pos.indexAfter(d), parent = $pos.node(d)\n    if (index == parent.childCount) continue\n    for (let after = parent.child(index);; after = after.firstChild) {\n      if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating) return true\n      if (after.inlineContent) return false\n    }\n  }\n  return true\n}\n", "import {keydownHandler} from \"prosemirror-keymap\"\nimport {TextSelection, NodeSelection, Plugin} from \"prosemirror-state\"\nimport {Decoration, DecorationSet} from \"prosemirror-view\"\n\nimport {GapCursor} from \"./gapcursor\"\n\n// :: () \u2192 Plugin\n// Create a gap cursor plugin. When enabled, this will capture clicks\n// near and arrow-key-motion past places that don't have a normally\n// selectable position nearby, and create a gap cursor selection for\n// them. The cursor is drawn as an element with class\n// `ProseMirror-gapcursor`. You can either include\n// `style/gapcursor.css` from the package's directory or add your own\n// styles to make it visible.\nexport const gapCursor = function() {\n  return new Plugin({\n    props: {\n      decorations: drawGapCursor,\n\n      createSelectionBetween(_view, $anchor, $head) {\n        if ($anchor.pos == $head.pos && GapCursor.valid($head)) return new GapCursor($head)\n      },\n\n      handleClick,\n      handleKeyDown\n    }\n  })\n}\n\nexport {GapCursor}\n\nconst handleKeyDown = keydownHandler({\n  \"ArrowLeft\": arrow(\"horiz\", -1),\n  \"ArrowRight\": arrow(\"horiz\", 1),\n  \"ArrowUp\": arrow(\"vert\", -1),\n  \"ArrowDown\": arrow(\"vert\", 1)\n})\n\nfunction arrow(axis, dir) {\n  let dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\")\n  return function(state, dispatch, view) {\n    let sel = state.selection\n    let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty\n    if (sel instanceof TextSelection) {\n      if (!view.endOfTextblock(dirStr) || $start.depth == 0) return false\n      mustMove = false\n      $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before())\n    }\n    let $found = GapCursor.findFrom($start, dir, mustMove)\n    if (!$found) return false\n    if (dispatch) dispatch(state.tr.setSelection(new GapCursor($found)))\n    return true\n  }\n}\n\nfunction handleClick(view, pos, event) {\n  if (!view.editable) return false\n  let $pos = view.state.doc.resolve(pos)\n  if (!GapCursor.valid($pos)) return false\n  let {inside} = view.posAtCoords({left: event.clientX, top: event.clientY})\n  if (inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(inside))) return false\n  view.dispatch(view.state.tr.setSelection(new GapCursor($pos)))\n  return true\n}\n\nfunction drawGapCursor(state) {\n  if (!(state.selection instanceof GapCursor)) return null\n  let node = document.createElement(\"div\")\n  node.className = \"ProseMirror-gapcursor\"\n  return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, {key: \"gapcursor\"})])\n}\n"],
  "mappings": "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",
  "names": []
}
